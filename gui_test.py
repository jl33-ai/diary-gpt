# Created by Justin Lee
# The Notebook that cures Memory Hoarding OCD
# To Do:
# - radio switch
# - switch to tab if too many words being written
# - 'Forget' sends them to ERP tab, which lights up, and then you can go through and delete them space invaders style 
# - ERP: stops you at 25-50 characters, window pop up, slow down - go home. Maybe just add that to the normal thing
# - Mindfulness: generates thoughts matrix style, change the brain animation
# Reminder
# Feel free to forget
# Treat your brain kindly
# Settings: 'train virtual brain on thoughts'
# Left bar, pretty square colours
# Forces you to reread them and stuff and assess the usefulness
# Simplicity 
# rename variances
# GPT summarise, GPT turn therapy conversion into... 
# Makeit as clean as possible
# fix the brainalyser. 
# IMAGES
# Add 'to do' functionality 
# Clean catologuing is in itself therapudic 
# Rename variable
# Read code
# Intentionally simplistic and restrictive. 
# Make more simplistic. 
# Add a note's rewrite safety mechanism
# This function selects a number of words proportional to the length of today's memory hoard and adds it to the brain ascii permanently
                    # What do u want to memroise.
                # Dad's on the drums now. Text moli read affind make brekki passport 12 fix date thing
# Attention span / Reading pracitce 
# &functionality&
# Retain this fact instead
# Add a 'saved' icon to the texf
# Learn lambda

import tkinter as tk
from tkinter import ttk, scrolledtext
import os
from datetime import date
import json
import random
from tkinter.messagebox import askyesno
import threading
import time
import queue

import torch
import torch.nn as nn
from torch.nn import functional as F

import pickle

import openai

# INSERT YOUR OPENAI API KEY HERE
openai.api_key = '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'

# Assign this variable globally
device = 'cuda' if torch.cuda.is_available() else 'cpu'

# Define decode function which is used globally 
with open("decoding_info.pkl", "rb") as f:
    decoding_info = pickle.load(f)
stoi = decoding_info['stoi']
itos = decoding_info['itos']
decode = lambda l: ''.join([itos[i] for i in l]) # decoder: take a list of integers, output a string

def get_model():
    # Check if CUDA is available
    if torch.cuda.is_available():
        print("CUDA is available.")
        # Get the number of available GPUs
        num_gpus = torch.cuda.device_count()
        print("Number of GPUs available:", num_gpus)
        # Loop over available GPUs and print some information about each one
        for i in range(num_gpus):
            print(f"GPU {i}:")
            print("  Name:", torch.cuda.get_device_name(i))
            print("  Capability:", torch.cuda.get_device_capability(i))
    else:
        print("CUDA is not available.")


    # hyperparameters
    batch_size = 32 # how many independent sequences will we process in parallel?
    block_size = 256 # what is the maximum context length for predictions?
    max_iters = 5000
    eval_interval = 50
    learning_rate = 3e-4
    eval_iters = 200
    n_embd = 348
    n_head = 6
    n_layer = 6
    dropout = 0.2
    # ------------

    torch.manual_seed(2049)

    with open('all_thoughts_cleaned.txt', 'r', encoding='utf-8') as f:
        text = f.read()

    # here are all the unique characters that occur in this text
    chars = sorted(list(set(text)))
    vocab_size = len(chars)
    # create a mapping from characters to integers
    stoi = { ch:i for i,ch in enumerate(chars) }
    itos = { i:ch for i,ch in enumerate(chars) }
    encode = lambda s: [stoi[c] for c in s] # encoder: take a string, output a list of integers

    # Train and test splits
    data = torch.tensor(encode(text), dtype=torch.long)
    n = int(0.9*len(data)) # first 90% will be train, rest val
    train_data = data[:n]
    val_data = data[n:]

    # Encode seed 
    def encode_seed(s): # encoder: take a string, output a tensor of integers
        return torch.tensor([stoi[c] for c in s], dtype=torch.long, device=device).unsqueeze(0)

    # data loading
    def get_batch(split):
        # generate a small batch of data of inputs x and targets y
        data = train_data if split == 'train' else val_data
        ix = torch.randint(len(data) - block_size, (batch_size,))
        x = torch.stack([data[i:i+block_size] for i in ix])
        y = torch.stack([data[i+1:i+block_size+1] for i in ix])
        x, y = x.to(device), y.to(device)
        return x, y

    @torch.no_grad()
    def estimate_loss():
        out = {}
        model.eval()
        for split in ['train', 'val']:
            losses = torch.zeros(eval_iters)
            for k in range(eval_iters):
                X, Y = get_batch(split)
                logits, loss = model(X, Y)
                losses[k] = loss.item()
            out[split] = losses.mean()
        model.train()
        return out

    class Head(nn.Module):
        """ one head of self-attention """

        def __init__(self, head_size):
            super().__init__()
            self.key = nn.Linear(n_embd, head_size, bias=False)
            self.query = nn.Linear(n_embd, head_size, bias=False)
            self.value = nn.Linear(n_embd, head_size, bias=False)
            self.register_buffer('tril', torch.tril(torch.ones(block_size, block_size)))

            self.dropout = nn.Dropout(dropout)

        def forward(self, x):
            # input of size (batch, time-step, channels)
            # output of size (batch, time-step, head size)
            B,T,C = x.shape
            k = self.key(x)   # (B,T,hs)
            q = self.query(x) # (B,T,hs)
            # compute attention scores ("affinities")
            wei = q @ k.transpose(-2,-1) * k.shape[-1]**-0.5 # (B, T, hs) @ (B, hs, T) -> (B, T, T)
            wei = wei.masked_fill(self.tril[:T, :T] == 0, float('-inf')) # (B, T, T)
            wei = F.softmax(wei, dim=-1) # (B, T, T)
            wei = self.dropout(wei)
            # perform the weighted aggregation of the values
            v = self.value(x) # (B,T,hs)
            out = wei @ v # (B, T, T) @ (B, T, hs) -> (B, T, hs)
            return out

    class MultiHeadAttention(nn.Module):
        """ multiple heads of self-attention in parallel """

        def __init__(self, num_heads, head_size):
            super().__init__()
            self.heads = nn.ModuleList([Head(head_size) for _ in range(num_heads)])
            self.proj = nn.Linear(head_size * num_heads, n_embd)
            self.dropout = nn.Dropout(dropout)

        def forward(self, x):
            out = torch.cat([h(x) for h in self.heads], dim=-1)
            out = self.dropout(self.proj(out))
            return out

    class FeedFoward(nn.Module):
        """ a simple linear layer followed by a non-linearity """

        def __init__(self, n_embd):
            super().__init__()
            self.net = nn.Sequential(
                nn.Linear(n_embd, 4 * n_embd),
                nn.ReLU(),
                nn.Linear(4 * n_embd, n_embd),
                nn.Dropout(dropout),
            )

        def forward(self, x):
            return self.net(x)

    class Block(nn.Module):
        """ Transformer block: communication followed by computation """

        def __init__(self, n_embd, n_head):
            # n_embd: embedding dimension, n_head: the number of heads we'd like
            super().__init__()
            head_size = n_embd // n_head
            self.sa = MultiHeadAttention(n_head, head_size)
            self.ffwd = FeedFoward(n_embd)
            self.ln1 = nn.LayerNorm(n_embd)
            self.ln2 = nn.LayerNorm(n_embd)

        def forward(self, x):
            x = x + self.sa(self.ln1(x))
            x = x + self.ffwd(self.ln2(x))
            return x

    class GPTLanguageModel(nn.Module):

        def __init__(self):
            super().__init__()
            # each token directly reads off the logits for the next token from a lookup table
            self.token_embedding_table = nn.Embedding(vocab_size, n_embd)
            self.position_embedding_table = nn.Embedding(block_size, n_embd)
            self.blocks = nn.Sequential(*[Block(n_embd, n_head=n_head) for _ in range(n_layer)])
            self.ln_f = nn.LayerNorm(n_embd) # final layer norm
            self.lm_head = nn.Linear(n_embd, vocab_size)

            # better init, not covered in the original GPT video, but important, will cover in followup video
            self.apply(self._init_weights)

        def _init_weights(self, module):
            if isinstance(module, nn.Linear):
                torch.nn.init.normal_(module.weight, mean=0.0, std=0.02)
                if module.bias is not None:
                    torch.nn.init.zeros_(module.bias)
            elif isinstance(module, nn.Embedding):
                torch.nn.init.normal_(module.weight, mean=0.0, std=0.02)

        def forward(self, idx, targets=None):
            B, T = idx.shape

            # idx and targets are both (B,T) tensor of integers
            tok_emb = self.token_embedding_table(idx) # (B,T,C)
            pos_emb = self.position_embedding_table(torch.arange(T, device=device)) # (T,C)
            x = tok_emb + pos_emb # (B,T,C)
            x = self.blocks(x) # (B,T,C)
            x = self.ln_f(x) # (B,T,C)
            logits = self.lm_head(x) # (B,T,vocab_size)

            if targets is None:
                loss = None
            else:
                B, T, C = logits.shape
                logits = logits.view(B*T, C)
                targets = targets.view(B*T)
                loss = F.cross_entropy(logits, targets)

            return logits, loss

        def generate(self, idx, max_new_tokens):
            # idx is (B, T) array of indices in the current context
            for _ in range(max_new_tokens):
                # crop idx to the last block_size tokens
                idx_cond = idx[:, -block_size:]
                # get the predictions
                logits, loss = self(idx_cond)
                # focus only on the last time step
                logits = logits[:, -1, :] # becomes (B, C)
                # apply softmax to get probabilities
                probs = F.softmax(logits, dim=-1) # (B, C)
                # sample from the distribution
                idx_next = torch.multinomial(probs, num_samples=1) # (B, 1)
                # append sampled index to the running sequence
                idx = torch.cat((idx, idx_next), dim=1) # (B, T+1)
            return idx

        def generate_with_seed(self, seed, max_new_tokens):
            # seed is a string that will be used to start the generation
            idx = encode_seed(seed)
            return self.generate(idx, max_new_tokens)
        
    # Save the decoding function and other required information
    decoding_info = {
        'stoi': stoi,
        'itos': itos,
    }
    with open("decoding_info.pkl", "wb") as f:
        pickle.dump(decoding_info, f)
        
    model = GPTLanguageModel()
    m = model.to(device)
    return model

def train_gpt(model, eval_interval, estimate_loss, learning_rate, max_iters):
    # print the number of parameters in the model
    print(sum(p.numel() for p in m.parameters())/1e6, 'M parameters')

    # create a PyTorch optimizer
    optimizer = torch.optim.AdamW(model.parameters(), lr=learning_rate)

    for iter in range(max_iters):

        # every once in a while evaluate the loss on train and val sets
        if iter % eval_interval == 0 or iter == max_iters - 1:
            losses = estimate_loss()
            print(f"step {iter}: train loss {losses['train']:.4f}, val loss {losses['val']:.4f}")

        # sample a batch of data
        xb, yb = get_batch('train')

        # evaluate the loss
        logits, loss = model(xb, yb)
        optimizer.zero_grad(set_to_none=True)
        loss.backward()
        optimizer.step()
        
    # Save the trained model
    torch.save(model.state_dict(), "trained_model.pth")

def generate_gpt(model, max_tokens=500):
    # Load the saved weights 
    model.load_state_dict(torch.load("trained_model.pth", map_location=torch.device('cpu')))
    model.eval()

    context = torch.zeros((1, 1), dtype=torch.long, device=device)
    generated = model.generate(context, max_new_tokens=200)[0].tolist()
    print(generated)
    #with open('show_moli.txt', 'w') as file:
        #file.write(decode_tokens(generated))
    return generated

#+======================================================================+

def therapist_conversation(transcript):

    completion = openai.ChatCompletion.create(
            model="gpt-3.5-turbo", # or "gpt-4"
            messages=[{
                    "role": "system", 
                    "content": "You are a therapist talking to a patient with memory hoarding OCD. Continue the following conversation. Make sure you are ALWAYS asking a question for the patient to answer. Get to know the patient. Feel free to be colloquial and add some typos for realism."
                }, {
                    "role": "user", 
                    "content": '\n'.join(transcript)
                }],
            max_tokens = 100
        )
    response = completion.choices[0].message.content
    return response 

brain_string_original = '''██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
████████████████████████████████████████████████████████████████████████▒▒░░░░░░░░▒▒▒▒▓▓██████████████████████████████████████████████████████████
████████████████████████████████████████████████████████████████████████░░░░░░░░░░░░░░░░░░████████████████████████████████████████████████████████
████████████████████████████████████████████████████▒▒▒▒░░░░░░░░░░░░▓▓██░░░░░░██░░░░░░░░░░░░▒▒▓▓██████████████████████████████████████████████████
██████████████████████████████████████████████▓▓░░  ░░░░▒▒▓▓██▓▓▓▓▓▓██▒▒░░▓▓  ░░░░░░░░░░░░░░░░░░██████████████████████████████████████████████████
██████████████████████████████████████████▒▒░░░░░░░░▒▒████████▒▒▒▒▒▒▒▒▓▓▒▒░░░░░░░░▒▒░░░░░░▒▒░░░░▓▓████████████████████████████████████████████████
████████████████████████████████████████▓▓░░░░░░░░██░░  ▓▓▓▓  ░░░░░░░░██▓▓░░░░░░░░██▒▒░░░░▒▒▒▒░░▒▒▓▓▒▒████████████████████████████████████████████
████████████████████████████████████████░░░░░░░░▒▒░░░░▓▓░░░░░░▒▒▒▒▒▒░░████░░░░░░░░▒▒▒▒░░░░░░▒▒▒▒▓▓▓▓░░▒▒██████████████████████████████████████████
████████████████████████████████████▓▓░░░░░░░░▓▓░░░░▒▒  ░░░░░░░░░░░░░░████░░░░░░░░░░██░░░░░░░░▒▒██░░░░░░▒▒▓▓██████████████████████████████████████
████████████████████████████████████░░░░░░▒▒▒▒▓▓░░░░▒▒░░░░▒▒██████░░░░██▓▓░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░▒▒░░░░▒▒██████████████████████████████████
██████████████████████████████████████▓▓▒▒░░░░▒▒██████░░▒▒▒▒░░░░░░░░░░░░██▒▒░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░▓▓░░░░░░▓▓██████████████████████████████
██████████████████████████████▒▒▓▓██░░░░▒▒░░░░░░░░░░░░▓▓░░░░░░░░░░░░▒▒  ██▒▒░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░▒▒░░░░▒▒██████████████████████████████
██████████████████████████████░░▓▓██░░░░▒▒░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░  ████▒▒░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░▓▓░░░░░░██████████████████████████████
████████████████████████████░░░░▓▓██▒▒░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░  ░░████  ░░░░░░░░░░░░░░░░▒▒░░░░▒▒░░░░▓▓▓▓░░░░░░░░████████████████████████████
████████████████████████████░░░░▓▓░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░████░░▒▒░░░░░░░░░░░░░░▓▓░░░░██░░░░████░░░░▒▒░░▓▓██████████████████████████
██████████████████████████████░░▓▓░░░░░░░░░░░░▒▒░░░░░░▒▒▒▒▒▒▓▓▒▒░░░░░░░░▓▓██░░░░░░░░░░▓▓░░░░▒▒▓▓░░░░██░░░░▓▓░░░░░░░░░░▒▒██████████████████████████
██████████████████████████████░░░░▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░▓▓██░░░░██▒▒▓▓░░░░░░░░▓▓░░░░▒▒░░░░░░▒▒░░░░░░░░░░██████████████████████████
████████████████████████████░░░░░░░░▓▓░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒░░░░████░░▒▒▓▓▒▒░░░░░░░░██░░░░░░▒▒░░░░░░▒▒██░░░░░░░░██████████████████████████
██████████████████████████░░░░░░░░░░░░▓▓░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░▒▒▒▒████░░░░░░░░░░░░░░▓▓░░░░░░░░░░▒▒░░░░░░▒▒░░░░░░░░▓▓▒▒██████████████████████
████████████████████████░░░░░░░░░░░░░░▒▒░░░░░░░░░░▒▒▒▒▒▒░░░░░░░░░░░░  ▒▒████░░░░░░░░░░░░▓▓░░░░░░░░░░░░▒▒░░░░░░▒▒░░░░░░░░▒▒▒▒██████████████████████
████████████████████▓▓░░▒▒░░░░░░░░░░▓▓██▓▓░░░░▒▒░░░░░░░░░░▓▓░░░░░░░░░░░░▓▓██  ░░░░░░░░▓▓░░░░  ░░░░░░░░░░░░░░▒▒░░░░░░░░░░▒▒░░░░████████████████████
████████████████████░░░░▒▒░░░░░░░░▒▒▒▒▒▒██▒▒░░░░░░░░░░░░░░░░▓▓░░░░░░░░░░▓▓██░░░░░░░░▒▒░░░░░░██░░░░░░░░░░░░░░▒▒░░░░░░░░░░▒▒░░░░▓▓██████████████████
██████████████████▓▓░░░░▒▒░░▒▒░░▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░▓▓▓▓░░░░░░░░▒▒▒▒░░░░░░░░▒▒  ░░░░░░░░░░░░░░░░░░▒▒░░░░▒▒██████████████████
████████████████████░░░░░░░░░░░░░░▓▓░░░░░░░░░░░░░░░░░░▒▒░░░░░░▓▓░░░░░░░░░░▒▒▓▓░░░░░░██░░░░░░░░░░░░░░▒▒▒▒██▒▒░░░░░░░░░░░░░░░░░░  ██████████████████
██████████████████▓▓░░▒▒░░░░░░░░░░▓▓▓▓░░░░░░░░░░████▒▒░░░░░░░░██░░░░░░░░░░▒▒▓▓░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░▒▒  ░░░░░░▓▓████████████████
██████████████████░░▒▒░░░░██░░░░░░░░████████████▒▒░░▒▒▒▒░░░░▒▒██▒▒░░░░░░░░▒▒▓▓░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░▒▒░░░░░░░░░░████████████████
██████████████████░░░░░░▒▒██░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░░░▒▒░░░░░░░░░░▒▒▒▒░░░░░░▒▒▓▓░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓░░░░░░░░░░░░░░░░▓▓██████████████
██████████████████░░░░░░▒▒██░░░░░░░░░░░░░░░░░░  ▒▒░░░░░░░░▓▓░░░░░░░░▒▒░░░░▓▓▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒██▒▒▓▓██░░▒▒░░░░░░░░░░░░▓▓██████████████
██████████████████░░░░░░▒▒██░░░░░░░░░░░░░░░░██▒▒░░░░░░░░▒▒░░░░░░░░░░▒▒▓▓██████░░░░░░░░░░░░░░░░░░░░░░██▒▒░░░░░░▓▓████▒▒░░░░░░░░░░░░░░██████████████
████████████████░░░░░░░░████  ░░░░░░░░░░▓▓▓▓░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░██▓▓░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░▓▓██  ░░░░░░░░░░░░░░██████████████
██████████████▓▓░░░░░░░░▒▒████░░░░░░░░▓▓▓▓░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░  ████░░░░░░░░▒▒░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░██░░░░░░░░░░░░░░░░██████████████
████████████████▓▓▒▒░░░░██▓▓████▓▓░░░░▓▓░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░░░██▓▓░░░░▒▒▓▓██▒▒░░░░░░░░░░░░░░░░▒▒░░░░░░▒▒▒▒░░░░░░░░░░░░  ██████████████
██████████████░░░░░░░░▒▒▒▒░░░░░░░░░░▒▒░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░  ██▓▓▒▒▒▒▒▒░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██████████████
██████████████░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▓▓▒▒░░░░░░░░░░░░░░  ████▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░▒▒░░░░░░░░░░  ██████████████
██████████████▒▒░░░░░░░░░░░░░░░░░░▓▓▒▒░░░░░░░░░░░░░░░░░░░░██▒▒░░░░░░░░░░▒▒▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓░░░░░░░░░░  ██████████████
████████████████░░░░░░░░░░░░░░░░░░░░▓▓░░░░░░░░░░░░░░░░░░▓▓░░░░▒▒░░░░░░░░▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░██▓▓░░░░░░░░░░  ██████████████
██████████████░░▒▒░░▓▓▒▒░░░░░░░░░░░░▓▓▓▓░░░░░░░░░░  ▓▓░░░░░░░░░░░░░░░░░░▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░▓▓░░░░░░░░░░░░░░▓▓▓▓░░░░░░░░░░░░  ██████████████
██████████████░░░░░░░░▒▒▒▒░░░░▒▒██▓▓▒▒▒▒▒▒░░░░░░░░  ░░░░░░░░░░░░░░░░░░░░▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▒▒░░░░░░░░░░░░░░░░██████████████
██████████████░░░░▓▓░░░░░░░░░░░░▓▓░░░░░░░░░░░░░░░░░░░░▓▓░░░░░░░░░░░░░░░░▓▓▓▓░░░░░░░░░░░░░░░░▓▓▓▓▓▓▓▓░░░░░░░░░░▓▓▓▓░░░░░░░░▓▓▒▒░░░░▓▓██████████████
██████████████░░░░▒▒░░░░░░░░░░░░▓▓░░░░░░░░▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓██░░░░░░░░░░░░░░▒▒░░░░░░░░██░░░░░░░░░░▓▓░░░░░░░░░░▒▒▓▓██████████████████
██████████████▓▓░░░░░░░░░░░░░░░░▒▒░░░░  ░░▒▒▒▒░░░░░░░░░░░░░░▒▒▓▓░░░░░░░░▓▓██░░░░░░░░▓▓░░░░░░░░░░░░░░░░▓▓░░░░░░░░▓▓░░░░░░░░░░░░░░▓▓████████████████
████████████████▒▒▒▒▓▓░░░░░░░░░░  ░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▓▓██████████▓▓▒▒░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░████████████████
████████████████░░▓▓██░░▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓██░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░▓▓██████████████
████████████████░░░░██░░░░░░░░▒▒░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▓▓▒▒░░░░░░░░░░░░░░░░▓▓██████████████
██████████████████░░░░▓▓░░░░░░██████▓▓░░░░░░░░░░░░▒▒▒▒████▓▓░░░░░░░░░░░░░░██▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██▒▒░░░░░░░░░░░░▓▓██████████████
████████████████▒▒░░▓▓░░░░▒▒░░░░░░░░░░░░██▒▒▒▒▒▒▒▒░░░░░░▒▒██▓▓░░░░░░░░░░  ██░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░  ▒▒░░░░░░░░░░░░░░▓▓██████████████
████████████████░░░░██░░░░░░░░░░░░░░░░░░░░  ▒▒▒▒████░░░░░░▒▒░░░░░░░░░░░░  ██░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░▓▓░░░░░░░░░░░░░░▒▒████████████████
████████████████░░░░██░░░░░░░░░░░░░░░░▓▓▓▓░░░░░░░░▓▓██░░░░░░░░░░░░░░░░░░  ██░░░░░░▒▒░░░░▓▓░░░░░░░░░░░░░░▒▒▓▓██████▓▓▒▒░░░░░░░░░░██████████████████
██████████████████░░░░░░░░░░░░░░░░██▒▒▒▒▒▒▓▓░░░░░░░░▓▓░░░░░░░░░░░░░░░░░░  ██  ░░░░░░░░░░▒▒░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░▒▒░░░░░░▓▓██████████████████
██████████████████▒▒░░░░▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░░░░░  ██░░▒▒░░░░░░▓▓▒▒░░░░░░▒▒▓▓░░░░░░░░░░░░░░░░░░░░░░  ░░████████████████████
████████████████████░░░░░░▒▒░░░░▓▓▒▒▒▒▒▒░░░░░░░░░░░░▒▒░░░░░░░░▒▒░░░░  ░░░░██░░░░░░░░░░░░▓▓░░░░░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░████████████████████
██████████████████████  ░░░░░░░░░░▓▓████░░░░░░░░░░▓▓░░░░░░░░  ░░▒▒▒▒░░░░░░████░░░░░░░░░░░░▓▓░░▓▓░░░░▓▓░░░░░░░░░░░░████░░░░░░░░████████████████████
██████████████████████▒▒░░░░░░░░░░░░████░░░░░░░░░░░░░░░░░░░░▒▒░░░░██████████▓▓░░░░░░░░░░░░░░░░░░▒▒▒▒░░██▒▒▒▒▓▓▒▒░░██▓▓░░░░▒▒██████████████████████
██████████████████████████▓▓▓▓░░░░░░▓▓░░░░░░░░░░▒▒░░░░░░░░░░░░▓▓░░░░░░░░  ▒▒▓▓░░░░░░░░░░░░░░░░░░░░▒▒░░░░▒▒▓▓░░░░░░░░▓▓██▓▓████████████████████████
████████████████████████░░░░▓▓▒▒░░░░▒▒░░░░░░░░▓▓░░░░░░▒▒░░░░░░░░▒▒▓▓░░░░░░▒▒▓▓░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░▒▒████████████████████████
████████████████████████░░░░░░██░░░░▒▒░░░░░░██░░░░░░░░▓▓░░░░░░░░▒▒░░░░░░░░░░▓▓░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░████████████████████████████
██████████████████████████░░░░░░▒▒░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░██▓▓▒▒░░░░▒▒▓▓░░░░▒▒██░░░░░░██░░░░░░░░░░░░▒▒██████████████████████████
████████████████████████████░░░░░░░░░░░░░░▒▒░░░░░░░░░░░░░░████░░░░░░░░░░░░░░██████▒▒▒▒██████▓▓▒▒░░░░░░░░██░░░░░░░░░░░░▒▒██████████████████████████
████████████████████████████▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░██▒▒▓▓▓▓▓▓░░░░░░░░  ░░░░░░▓▓░░░░░░░░░░░░░░████████████████████████████
██████████████████████████▒▒  ██░░░░████░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░▒▒██░░░░░░░░░░░░░░██████████████████████████████
████████████████████████████░░░░▓▓░░░░▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒██████████████████████████████
██████████████████████████████░░░░▓▓░░░░██░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒████░░░░░░░░░░░░▓▓██▒▒▒▒░░░░░░░░░░░░▓▓██████████████████████████████████
██████████████████████████████▒▒░░░░▓▓░░░░██████▓▓▓▓▓▓▒▒░░░░░░░░░░░░▒▒▓▓▓▓▒▒████░░░░░░░░░░░░░░▓▓▓▓▓▓░░░░░░░░░░████████████████████████████████████
████████████████████████████████▒▒░░░░██░░▒▒░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░░░██████░░░░░░░░░░░░░░░░░░░░▓▓▒▒░░░░████████████████████████████████████
██████████████████████████████████▒▒░░░░░░░░░░░░░░  ▓▓░░░░▒▒░░░░░░░░░░░░░░░░████░░██░░░░░░░░░░░░░░░░░░░░▓▓████████████████████████████████████████
████████████████████████████████████▓▓░░▓▓░░░░░░░░▒▒░░░░░░░░░░██▓▓▓▓▓▓░░░░░░████  ░░▓▓░░░░░░░░░░▓▓░░░░▓▓██████████████████████████████████████████
████████████████████████████████████████▓▓░░░░░░░░▒▒░░░░░░░░░░░░░░░░▒▒░░░░░░████▓▓░░░░▒▒▒▒▒▒▒▒▒▒░░  ▓▓████████████████████████████████████████████
██████████████████████████████████████████▓▓▒▒  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░██████▓▓░░░░░░░░░░░░▒▒▓▓██████████████████████████████████████████████
████████████████████████████████████████████████▒▒▒▒░░░░░░░░░░░░░░░░░░░░▒▒██████████▓▓        ▒▒██████████████████████████████████████████████████
██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████'''
non_empty_chars = [(i, char) for i, char in enumerate(brain_string_original) if char not in [' ', '█', '\n']]
class Brain:
    def __init__(self):
        self.string = brain_string_original
    def update_brain_string(self, words):
        self.string = brain_string_original
        for word in words:
            i, _ = random.choice(non_empty_chars)
            self.string = self.string[:i] + word + self.string[i+len(word):]

brain_string2 = '''██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
██████████████████████████████████████████████████████████████████████▓▓██▒▒░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓██████████████████████████████████████████████████████████████
████████████████████████████████████████████████████████████████▒▒░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░▓▓████████████████████████████████████████████████████████
██████████████████████████████████████████████████████████▒▒░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▓▓████████████████████████████████████████████████████
██████████████████████████████████████████████████████░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒░░░░██████████████████████████████████████████████████
██████████████████████████████████████████████████▒▒░░▒▒▒▒▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒░░▓▓██████████████████████████████████████████████
██████████████████████████████████████████████▓▓░░▒▒▒▒▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░▓▓████████████████████████████████████████████
████████████████████████████████████████████▒▒░░▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓░░░░░░░░    ░░░░░░░░░░░░    ░░░░░░░░░░▓▓▓▓▓▓▓▓▒▒▒▒▒▒░░████████████████████████████████████████████
██████████████████████████████████████████░░░░▒▒▒▒▒▒▒▒▓▓▓▓▓▓▒▒░░░░░░░░      ░░░░░░░░░░░░  ░░░░░░░░░░░░░░▒▒▓▓▓▓▓▓▓▓▒▒▒▒░░██████████████████████████████████████████
████████████████████████████████████████▒▒░░▒▒▒▒▒▒▓▓▓▓▓▓░░░░░░░░░░▒▒░░░░      ░░░░░░░░░░      ░░░░░░░░░░░░░░░░▓▓▓▓▒▒▒▒▒▒░░████████████████████████████████████████
██████████████████████████████████████▓▓░░▒▒▒▒▓▓▓▓▓▓▒▒░░░░░░░░▒▒▒▒▒▒▒▒░░░░░░  ░░▒▒▒▒░░░░      ░░▒▒░░▒▒▒▒░░░░░░░░▓▓▒▒▒▒▒▒░░▒▒██████████████████████████████████████
██████████████████████████████████████░░░░▒▒▓▓▓▓▓▓▓▓  ░░░░░░▒▒▒▒▒▒▓▓▒▒░░▒▒░░░░▒▒▓▓░░░░░░░░░░░░░░▒▒░░▒▒▓▓▒▒░░░░░░░░▒▒▒▒▒▒▒▒░░██████████████████████████████████████
████████████████████████████████████░░░░▒▒▓▓▓▓▓▓▒▒░░░░░░░░░░░░░░░░▒▒░░▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒░░▒▒▒▒░░▓▓▒▒░░░░░░░░░░      ▒▒▒▒▒▒▒▒▒▒████████████████████████████████████
████████████████████████████████████░░▒▒▓▓▓▓▓▓▒▒░░▒▒▒▒▒▒░░      ░░░░▒▒▒▒░░▒▒▓▓░░▒▒▓▓▓▓▒▒░░▒▒░░░░▒▒▓▓▓▓▒▒▒▒▒▒░░      ░░▒▒▒▒▒▒░░████████████████████████████████████
██████████████████████████████████░░░░▒▒▒▒▓▓▓▓░░▓▓▓▓░░░░░░░░░░░░░░▒▒▒▒░░▒▒▒▒▒▒░░▒▒░░▒▒▒▒░░░░░░░░░░░░▒▒▒▒░░░░░░        ▒▒▒▒▒▒░░▓▓██████████████████████████████████
██████████████████████████████████░░▒▒▒▒▓▓▒▒░░░░▓▓░░▒▒▒▒▒▒▒▒░░  ░░░░  ░░▒▒▒▒░░▒▒▓▓▒▒░░░░    ░░░░░░░░░░░░▒▒▒▒░░░░  ░░  ░░▒▒▒▒▒▒░░██████████████████████████████████
████████████████████████████████░░░░▒▒▓▓▓▓░░░░░░▒▒▒▒▓▓▒▒▒▒▒▒░░▒▒▒▒░░  ░░░░░░▒▒▓▓▒▒▒▒░░  ░░      ░░░░░░▒▒▓▓▓▓▒▒░░░░▒▒░░▒▒░░▒▒▒▒░░██████████████████████████████████
████████████████████████████████  ▒▒▒▒▓▓▒▒░░░░░░░░▓▓▓▓▒▒░░░░░░▒▒░░        ░░▒▒▒▒░░░░░░▒▒░░░░░░░░░░░░▒▒░░░░▒▒▓▓▒▒░░▒▒▒▒░░░░▓▓▒▒░░██████████████████████████████████
████████████████████████████████░░▒▒▓▓▓▓░░░░░░░░▒▒▓▓▒▒░░░░░░░░░░░░▒▒░░    ░░░░▒▒▒▒▒▒░░▒▒░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▓▓░░░░▒▒░░░░▒▒▒▒░░██████████████████████████████████
██████████████████████████████▓▓░░▒▒▓▓▓▓▒▒      ░░▒▒░░░░▒▒░░▒▒▒▒▒▒▒▒░░  ░░  ░░▓▓▒▒░░▒▒▓▓░░▒▒▒▒▒▒░░░░▒▒▓▓▒▒▓▓░░▒▒▓▓░░▒▒▒▒▒▒░░▒▒▒▒▒▒████████████████████████████████
████████████████████████████████░░▒▒▓▓▓▓░░      ░░▒▒░░▒▒░░░░░░▒▒▒▒░░░░  ░░░░▒▒▓▓▒▒░░▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▒▒░░▓▓▓▓▓▓▒▒▓▓▒▒░░░░▒▒░░▒▒▒▒▒▒████████████████████████████████
██████████████████████████████▒▒░░▒▒▓▓▓▓░░      ░░▒▒▒▒▒▒░░      ░░▒▒▒▒░░░░▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒██▒▒▓▓▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒████████████████████████████████
██████████████████████████████░░░░▒▒▓▓▓▓    ░░░░▒▒▒▒▒▒▒▒░░░░    ░░▒▒▒▒▒▒░░▓▓▓▓▓▓▒▒▒▒▓▓▒▒▓▓▒▒▓▓▓▓▒▒  ▒▒▓▓▒▒██▓▓▒▒▒▒▒▒░░▒▒░░░░▒▒▒▒▒▒████████████████████████████████
████████████████████████████████░░▒▒▓▓▓▓░░░░▓▓░░▓▓░░▓▓░░▒▒░░▒▒░░▒▒▒▒▒▒▒▒░░▓▓░░▒▒▒▒░░▒▒░░▒▒▒▒░░░░░░▒▒▓▓▓▓▒▒▓▓▓▓▒▒░░▒▒░░      ▒▒░░▒▒████████████████████████████████
██████████████████████████████▒▒░░▒▒▓▓▓▓░░▒▒▓▓▒▒▓▓▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▓▓░░░░▒▒▓▓░░░░▒▒░░        ░░░░▓▓▓▓▒▒▓▓▒▒▒▒▓▓▒▒░░▒▒░░      ▒▒░░▒▒████████████████████████████████
██████████████████████████████▒▒░░▒▒▓▓▓▓░░░░▒▒▒▒▒▒▓▓▒▒▓▓░░▒▒▒▒▒▒▒▒▒▒▒▒  ░░░░░░░░        ░░▒▒▓▓▓▓▒▒▒▒▒▒▓▓▒▒▒▒▓▓▒▒░░░░        ░░░░▒▒████████████████████████████████
██████████████████████████████░░▒▒▓▓▓▓▓▓░░░░▒▒▓▓▒▒▓▓▒▒▓▓▒▒▒▒▓▓▒▒▒▒░░░░    ░░░░░░▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒▒░░▓▓▓▓▓▓░░▒▒░░░░░░        ▒▒░░██████████████████████████████████
██████████████████████████████░░▒▒▓▓▓▓▓▓▓▓░░░░▒▒▒▒▒▒▒▒▓▓▓▓░░▒▒▒▒░░        ░░▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░░░▓▓▓▓▓▓▒▒░░░░    ░░░░░░░░░░▒▒░░▓▓████████████████████████████████
██████████████████████████████░░▒▒▓▓▓▓▓▓▓▓░░▒▒░░░░▒▒▓▓▓▓▓▓▓▓░░░░      ░░░░▒▒▓▓▓▓▒▒░░░░░░    ░░░░▓▓▓▓▒▒▒▒▒▒░░        ░░░░░░▒▒▒▒░░██████████████████████████████████
████████████████████████████▓▓▒▒▓▓▓▓▓▓▓▓▓▓██░░░░▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▒  ░░▒▒▒▒░░▒▒▒▒░░░░▒▒░░░░░░░░▒▒▓▓▓▓▒▒░░▓▓░░▓▓░░░░░░░░▒▒░░▓▓▒▒▒▒░░██████████████████████████████████
████████████████████████████▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓██▒▒▒▒░░▒▒▒▒░░▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒▓▓▓▓▓▓░░▓▓▒▒▒▒░░▒▒▒▒░░░░▓▓▓▓▒▒▒▒░░██████████████████████████████████
██████████████████████████████▒▒▓▓▓▓▓▓▓▓██████▓▓████▓▓▓▓████▓▓▓▓░░▒▒░░▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▓▓░░░░░░▒▒▒▒░░▓▓▓▓▓▓▒▒▒▒▒▒██████████████████████████████████
██████████████████████████████░░▓▓▓▓▓▓▓▓██████████████▓▓████████░░▒▒░░░░░░░░░░    ░░░░▒▒▓▓▓▓▓▓▓▓▒▒▓▓▒▒░░░░░░░░░░▒▒▓▓▓▓▓▓▓▓▒▒▒▒▓▓██████████████████████████████████
████████████████████████████████▒▒▓▓▓▓▓▓██████████████████████████▒▒░░▒▒▒▒▓▓▒▒░░    ▒▒▒▒▓▓▓▓▓▓▒▒▒▒░░▒▒██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░████████████████████████████████████
██████████████████████████████▓▓▓▓▒▒▓▓▓▓▓▓██████████████████████████▓▓▒▒░░░░░░░░    ░░░░░░░░░░▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░████████████████████████████████████
██████████████████████████████▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓████████████████████████████▒▒░░        ▒▒▓▓██████▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓████████████████████████████████████
██████████████████████████████▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓████████████████████████████▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░██████████████████████████████████████
████████████████████████████▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓██████████████████████████▓▓▒▒▒▒▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒██████████████████████████████████████
████████████████████████████▓▓▓▓▓▓▓▓▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓████████████████████████▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒████████████████████████████████████████
████████████████████████████▓▓▓▓▓▓██▒▒░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████████████▓▓▓▓▒▒▓▓▓▓██████▒▒████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒████████████████████████████████████████
████████████████████████████▒▒▓▓▓▓████░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓██████████████████████▓▓▒▒▓▓▓▓▓▓▓▓██████▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒██████████████████████████████████████████
████████████████████████████████▓▓▓▓██░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓████▓▓▓▓████▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░██████████████████████████████████████████
████████████████████████████████████▒▒░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████▓▓▓▓██▓▓██▓▓▓▓▓▓▓▓████▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░██████████████████████████████████████████
████████████████████████████████████░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████▓▓██▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░██████████████████████████████████████████
████████████████████████████████████░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████████▓▓▓▓██▒▒██░░▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒████████████████████████████████████████
████████████████████████████████████░░▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓▒▒░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░████████████████████████████████████████
████████████████████████████████████▒▒▓▓░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████████▓▓████▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░████████████████████████████████████████
██████████████████████████████████████▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████▓▓▓▓▓▓▓▓████▓▓▒▒██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒░░██████████████████████████████████████
██████████████████████████████████████▒▒▓▓░░▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▒▒██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓████████████████████████████████████
████████████████████████████████████████▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒░░████████████████████████████████████
██████████████████████████████████████████▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░▒▒██████████████████████████████████
██████████████████████████████████████████░░▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░██████████████████████████████████
██████████████████████████████████████████░░░░▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░░░░░░░██████████████████████████████████
██████████████████████████████████████████▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒░░▒▒░░░░████████████████████████████████
██████████████████████████████████████████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▒▒░░░░██████████████████████████████
████████████████████████████████████████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▒▒▒▒░░▒▒████████████████████████████
██████████████████████████████████████████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▒▒▒▒░░▓▓██████████████████████████
████████████████████████████████████████████████████▓▓▓▓▒▒▒▒▒▒░░▒▒▒▒░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▒▒▒▒░░░░██████████████████████████
████████████████████████████████████████████████████████████████████░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████▓▓▓▓▓▓▓▓▓▓░░░░▒▒▒▒▒▒░░▓▓████████████████████████
██████████████████████████████████████████████████████████████████▒▒  ░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████████▓▓▓▓▓▓▓▓▒▒░░░░▒▒▒▒░░░░████████████████████████
████████████████████████████████████████████████████████████████▓▓    ░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████████████▓▓▓▓▓▓▓▓▒▒░░░░▒▒░░░░▓▓██████████████████████
████████████████████████████████████████████████████████████████    ░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████▓▓▓▓▓▓▓▓▒▒▒▒░░░░▒▒░░░░██████████████████████'''
non_empty_chars_2 = [(i, char) for i, char in enumerate(brain_string_original) if char in [' ']]

therapist_passionate = """                                                                 @&&%.                                                                      
                                                            *&%%%#####((//%%#%%%%%%%&/                                                      
                                                       ,&%%%#########(((////(#######%%%&                                                    
                                                   %%%%%##%##%%%%%%#####(//((((((((####%%%&@                                                
                                                 %%######%%#%%%%%####((/*/(##((((#(((###%%%%%#                                              
                                              &%###%%%%%%%%%#%%%%%######(/(((((/////(##%%%%%%%%&                                            
                                            (%######%%###%%%%%%%###(((/(((((//(((((((##%#%%%&%%%%&                                          
                                          @%###%#%%##%%%%%%%%%%%##((((((//(///(((////(#%%%%%%%%%%%(                                         
                                        ,%##%%%%%##%%#%%%%%%########((((((////(//((((#%%%%%%%%%%%%%&                                        
                                       %###%%%#%%%#%%%###%##%%%%%%#((###((//////////(##%%%%%%%%&%%%%*                                       
                                     *####%%#%%%#%%##%%%%%%####%##(((//////*//((((((((####%%%%%%%%%%&                                       
                                    ####%%%%%%%%#%%#%%%##%###%%%###((//(((/**/((///((#####%%%%%%%%%###                                      
                                   &###%#%%#%%#%#%%%##%%%%%%%%%###((/((((/***/(((//((###(#%%&&%%%%%%%%@                                     
                                  /##%%#####%%%%%#%%%%%%%%%%#%%###(((//((//**/(((//((###%%%&&%%&&%%%%%%(                                    
                                 %##%#####%%%%%%%%%%%%%%%%%%%######((///((//*/((((////((#%%%&&&&&%%%%%#%                                    
                                %#######%%%%%%%%%%#%%%############(((///(((/***////////((###%%%%&&&&%%#%%                                   
                              .%######%%%%#%%%%%%##########((((((////////**,,,****/////((###%%%%%%%%&&%%&                                   
                              %####%##%%%%%%%%%%%%##%%%#((//*****,****,,,,,,,,,,,**///////(#%%%%%%%%%%%%%*                                  
                             /######%%%##%%%%%%%####(/****,,,,,,,,,,,,,,,,,,,,,,,,,,,,*//(((##%%&&%%&&%%%&                                  
                            .######%#%%####%%####((/****,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,**/(##%%&&&&&&%%%.                                 
                            %###%%%##%###%%#####(/****,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,***//(#%%%&&&&&%%                                 
                           *%##%%%%%%###%%%%##((/*****,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,****//(#%%&&&&%#                                 
                           ,##%%%%%####%%%##((//********,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,*****/(#%%&&&%#                                 
                           ,##%%%%%%#%%%%#(((//********,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,******/#%%&&&%#                                 
                           ,#%%%%%##%%%%##(((//*******,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,****/(#%%&&%#                                 
                           ,%%%%%#%%&&%##(((///********,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,****//(#%%&&%                                  
                           ,%%&%%%%%%%###((/////*********,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,*****//(#%%%%%                                  
                           ,#/*/(%%%%%##(//////*****////****,,,,,,,,,,,,,,,,,,,,,,,,,,,,****///////(#%%%                                    
                           %(###(#%%%%#(///////*///(((((((//****,,,,,,,,,,******,,,,,,***/((####((/(#%%%                                    
                          ##(##((#%%%%(////////((/////(((####(//********************//(###((((((((((#%%%                                    
                          ((/##(((#%%#(///////////*****///(((###(///***********///(#####((////////(((%#/                                    
                          (#/((/((###(///**////////////////((((((((///*******//((######((///////////(#%/                                    
                          (%////(###((//****///(((((((((((((((((((((//******//(##################((/((%                                     
                          /&#///(##((///*****/(((((((//////(######((//******/(#######(/////(#####(//((%                                     
                           *%(/((###((/*******//(#######%%%%##%%##(((**,,,*/(##%%%%%%###(((#####(///((%                                     
                             &//((/(((/**********//(###%&&&&%%%%%#((/*,,,,,*(##%%%%&&&&&%%%##(/****/((%                                     
                              %/////(//******,,,***/((###(((((/////***,,,,,*//////((((#####(//******#%.                                     
                                #//((///*************///////**********,,,,*******///((((((//*******/#                                       
                                 %(/((//******************,,,,,,,,****,,,,*****,,,*****************/*                                       
                                  #.&%#//***************,,,,,,,,,****,,,,,*******,,,,**************(*                                       
                                    %&%///**************,,,,,,**,*****,,,,************************/#*                                       
                                   .@&&(///***************************,,,,***********************//(%                                       
                                   .&&&#////*************************,,,,,,***//***************///((%                                       
                                   &%%&%//////****************/*******,,,,,,***///************///(##%                                       
                                   &%%&&////////**************/(//////*****/((//***/********///((%(&%&                                      
                                 *&%%%&&(/////////********,,,**/(((##((((((###/******//***////(#%   /%/                                     
                                *&%%%%&&%/////////*/*****,,,,,**/(((((((#####/***,****///////((#      %%*                                   
                                (%%%&&&&&(/////////*******,,,,,,*/((((((((((/**,,,****////((((%                                             
                                &%&&%%&&%#/////////***///**,,,,,,,*/(((((//**,,,,,**/////((((#                                              
                               #%%###%%%%%%////////**//(((//****/*////(///********/((////(((#*                                              
                             ,*%#(###%%%%%#(///////**///((###%%###((((#((####%%%%%#((///(((#&                                               
                    ***&&&&&&&%%####%%&%###(//////////////((((###%%###%%%%%%%%%##(//////(((%%%&&%.                                          
               *%&%%%%%%%&&&&%%####%&&@&%###(////////////*//((((/////(((/////((((/////(((##(**(&&&&&.                                       
           *&%%%%%%&&&&&&&&&&%######&&&&%%##(/////////////**//((((//////////((((/////(((#%%&%/,..*#&&%&*                                    
       *%%%%%%%&&&&&&&&&&&&&&%######&&&&%%%#((////////*******///((((((((((((((///////(#%&@@&&%*.....,#%%%&&                                 
  .*&%##%%%%&&&&&&&&&&&&&&&&%##%%%##%&%%%%%%((////////********//((((((((((((//****//(#%@@@&&&&(,......./&&%%%&*                             
%%##%%%%&&&&&&&&&&&&&&&&&&&&%%%%%&&&%%#%%%%%#((////////*********//(((((((///******/(#%%&&&%%#(((,.......*%&%%&&&&/                          
%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&%%#%%%%#%%%%##((/////////****,,,,,,,******,,,,****/(#%%%%&&&%%%%%%(......,#&&&&&&&&%&&                       
%&&&&&&&&&&&&&&&&&&&&&&&&&&&&%###%%%%%%%%%%##((////////////**,,,,,,,,,,,,,,,,**//(##%%%%%&&&&&&&&&/......*%&&&&&&&&%%%%&/                   
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&#%%%%%%###%%%##(((/////////////****************/(((####%%%%%%&&%%%&&/.....,#&&&&&&&&&&&&&%%%%#                
&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@%(///(%%#######((((////////////////////////(((((((((((#%%%%###%&&&&&&&*..,/%&&&&&&&&&&&&&&&%%%%&,             
&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@(*****/%%#######((((////////////(((((((((((((((##((((((#%%#####%@@@@@&*..*&&&&&&&&&&&&&&&&&&&&&%%%,           
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@%**///(%&&%######((((/////////((((((((((((((((##((((((((##(((###%@@@@&%(/%&&&&&&&&&&&&&&&&&&&&&&&%%%.         
&&&&&&&&&&&&&&&&&&&&&&&&@&&&&@%**/**/%@&&%%######((((((((((((((((((((((((((##((((((((((/(((###&@@@@&@&&@@&&&&&&&&&&&&&&&&&&&&&&&&%%(        
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@#((/(/#@@@&%%%#####((((((((((((((((((((((((##((((((((((**//(####%@%#%&&&@@&&&&&&&&&&&&&&&&&&&&&&&&&%%%,      
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&#////(((%@@&%%%######((((((((((((((((((((###((((((((//*,,*/(((##((//(#&@@&&&&&&&&&&&@&&&&&&&&&&&&&&&&%%/     
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%(//((#####@@@&%%%######(((##########((((###((((((((//*,,,///((((((((((%&&@&&&&&&&&&&&&@&&&&&&&&&&&&&&&%%,    
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%#(//((((####&@@@&%%%###############((((####((((((((((((((#(((((((#((##(%&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&%%(   
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%(((((((##%%%%&@@@@&%%##############((((##((///((%%%%%%%##((((((((#####%&&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&%%&  
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%((((((((%#%%&&&@@@@@@&%%################(/////(##%%%%%%##############%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%& 
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%#(##((((#%#%%&@@@@@&@@@@@@&&%%%%#######(/////(##%%&&%#((###########%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%(####(#%###%%&@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&%%%%&&&%&%%&&&%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&#(#########(#%%&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&##%##%###(##%%&&%%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@&&@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@&%%%###%%#####%%%%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@&%%##%%%%%%%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@&&&@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@
@&@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&@&&@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&@@@
@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@&&&&&&&&@@@@@
@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@&&&&&&&@&@@@@
@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@&&&&&&&&&@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@&&&@@@@@@@@@
@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@&&&&&&&&&&@@@@@@@@@@@@@@@@@
"""
therapist_doubtful = """                                                       *&###%%/  *@&&%##&#                                                                  
                                                      #(((((##(((((((#(#####(((#%&                                                          
                                                  %#(((((((((##########(#######(#######,                                                    
                                               &%(#####((#(((((((####%##(##((###((########%                                                 
                                              ###%##((((##(((((((#########(((((###((#####%%##(                                              
                                            (##%%####((#(((((((((((#######((((((((#(((#####%%##%                                            
                                          *%#######((((((((#######%####%%##((((#(####(((#(###%%##@                                          
                                        .%%%%%####(((((((/////((((###(####%#((((########(##(##%%%##                                         
                                       /%%%%%###(((////*********/((####(####%((###%#########(##%%####&                                      
                                      %%&&%(//*********************//(#####%%#(####%%############%%##(#(                                    
                                     *%%%/**************************///((((######%%%%%%##%###%##%###%#((%/                                  
                                     %##*******************************///((####%%%%%%%%##%######%#####(#%                                  
                                    ###*********************************///((#%%%%%%%%%%%%#%######%%%%##(&                                  
                                   .%#***********************************///(##%%%%&%%%%%%%%%%#####%##%###                                  
                                   &%/************************************///((#%%%%%%&%%%%&%%######%%%%###                                 
                                   %(***************************************//(##%%%%%%%&&%%&%%#%###%%%%#(#.                                
                                  (#/****************************************//(((#%&&&&&&&&%%%%#%#%#%%%##(%                                
                                  /(****************************************/////((##%%&&&&&&%%%%#%%##%%%##(#                               
                                  #/***************************************//////(((####%&&&&%%%%%%(###%%#(#(#,                             
                                 %(****************************************/////(/(((####%&&&&&%&%%(###%%%###((#                            
                                #((((##(((//*******************************////////(((#%%%%&&%&&&&%#(((%%%%((((/#.                          
                               (((((((((####//*******////(#####((((((/*****/////////((#%%%%&&&%&&&%#(((#%%%#((((/(                          
                              .((//////((((#(/******///((((((////////((((//*////////((#%%&%%&&&&&&%#(((#%%%%#((((/%                         
                              #///((##%%%%%###/*****//(((((((((((//////*///(/////////((#%&&&&&&&&&%#(((##%%%##((//**                        
                             /((((#%%&%##&&&##/****//(((((##((#######(((////(/////////(##%&&&&&&&&&(#(((#%&%###(//*#.                       
                           *#(#((/#%%#**%&@&&#****//(((((((##/,/%&@&%#%#((/////////////(##%&&&&&@@&#((((#%%%%###(///(                       
                          ##((((/////((((/(##/**////(//**(((/**#&&&&&%%##((/////////////(##%&&&&&&@&#(((#%%%%%##((//(.                      
                         .#(#((/***//((((((/////////////////(((/((((((###(///////////////#%%&&&@&&&&%#((##%%%%%##((/*%                      
                         #(###(***//////////////////////////((((((//////////**//////////(#%%&&&&@@@%%%####%%%%%%##((/#.                     
                        %((#((*********/(///(((////////**/////////////*********////////((#%%&&&&&&&%##%####%%%%%%##((//                     
                       .//###(*******////////((((////////***//////*/**********/////////((#%%&&&&&%#%%%######%%%%####((/                     
                      ,//(#(#/******//////////((((((///////**/////************////////(((#%%&&&%#%%##########%%%####((/                     
                     ///((###*****////(((((##((///(((///*/*/*****************//////((((((#%%%%%####(##########%%###(((*                     
                    &(/((((#(/*/*///(//(###%&@&%(((((/*****/**//****/******//////((((((((##%%%%###(((#########%####((/#&                    
                   /(/((#(###//////(////((#(((((((((/********************///////((((((###########(((#((#######%%###(//(#                    
                 &(///(#####%(//((////////////////*******************/////////(((((((###(##((###((((#(########%%####(/*/,                   
                //(((((((###%(/(((/////******************************///////(((((((((######(((##(((#((########%%#%##((**#.                  
              /#(((#((((######/(/////////**************************//////((((((###(((#######((###((##(%#(#####%%#%%##(/,/(                  
             ,((#(((/(((#####%(/**(#####(((///*****************////////(((((#((((((((#####(//(####(#(%%#((##(#%%%%%###(/*/                  
            ,#(#((%#/((########**///(((###%%##((//*/********////////(((((((((((((((((####((//(##((%&(%%#((####%%%%%####(*//.                
#%.         %(((#%,#/(###((#%%%/*///((/(//(/(((###%##(//****////////((((((((((((((((#####(//(##(((##(%%#((###%%##%%##(###//(                
.((#(,..    ((//((//(######%%%&(*////((((#########((////****////////(((((((((((((((###%&@&&%%%#((((#(%%##((######%%%##((((#((%#             
%%##*..*.  *(/((/**(((##%%%%%%&%/*///((((////////////////***////////((((((///(((((###%&&%/&#%&%((((#(#######%%##(#%%###((#&    /(/(/        
&%%#/(*/(.*/(*****/(####%%%%%&&%#**///(((((/////////////////////////(((((////((((###%&&&&%#%&%%#(((((#######%%%%##((####((         #(       
&&&%%#(**/(/(/*,*/####%%%%%%&&&&%/*///////((///////////////////(/(((((((////(((((##%%&%&&&&&&%%%#(((#(###%%%%%%%%###((##((#       (#        
&&&&&%#(**,(#/**((###%%%%%%&&&&&&#/********///////////////////(((((((((((/(((((###%%&&&(%&&&&&%%%((((###%%%%%%%%%%%%##(##(/*      &       (%
&&&&&&%#/*,##///(##%%%%%%&&&&&&&&&(******************////////((((((((((((((((####%%%%%%%%&&&&&&%%#(//((#%%%&%%%%%&%%%##(#(((            ,%%(
&&&&&&&%(//%%#*,,(#%##%%%%%%%&&&%&#****************///////((((((((((((((((((###%%%%%#%%%%&&&&&&&%#((/(##%%&&%%%%%%%%%%%(###(#         /%####
&&&@&&&%#%(%&(**(/(###%%%%%%%%&%%&%///***********////////(((((((((((((((((###%%%###%%%%%&&&&&&&%%#(((((##&&&&%%&%%%%%%%#(%%##,      *%(#%###
&&&&@&&%%&##&#/((/((#######%##%%%%&%(//////////////////(((((((((((((((######%#######%&&&&&%%%%%%##((#((#%%&&&%%%&&%%%%%#(%%&%%%    %((/(##%%
&@@@&&%%%%#%%#(**#########((####%%%%%#((((((((((((((((((###############%%%%#((#(#%%&&%%&&&&%%%%%#((#%((%&%%%%%%%%%&%%%%%(%%&&%%#,*#(/((((%%#
&&&&&&&&&%#%#(%#%%%#((#(####(###%&%%%%&&%%%%%%################%%%%%%%%%%%%#(((#%%&&%%%&&%&&&#%###(%%%((%&%%%%%%%%###%&%##%%%%%%%#(((#%%%%##%
&&&&&&%&&%%##%%%%##(((##(########%%%&&&&&&&&&%%%%%%%%%%%%%%%%%%%%%%%%%%%%####%%&%&%%#%&%%&&&%##((%%&%(#%%&&%%%%%%%##%%%#%%%#%%%%%###%%%%##%%
&&&&&&%&&&####%%%##((###((#######%&&%%%%&&&&&&&&%%%%%%%%%%%%%%%#############%%%%%%%#(%&%#%&&%####%%%(##%&&&&&%%%%%%%%%%%%###%%%%%%(#%###((%#
@&@&&&&%&%%%#(#%%#(((##((#######%%%&&%%#%%%%&&&&&###%%%%%%%%###############%%%%%%%##(###(###%&%&%###%%%&&&&&&%%%%%&%%%%#(#%%%%%%##((%%%%%%, 
&&@&&%%%###%%((#%%#####%%%##%##%%%%%%%%%%%&&&&&@@%((((((((#(((((((##########%%%%&%#(#%%%##%%####%%%%%&&&&&&&&&%%%%%%%#(#%%####%#%##(##%(    
@@@&&&@&%#%##(##%%%%###%%%###%%%%%&%%%###%%&&&&&&&#(((///((/(((((((#########%%%%%&%##%%%%#%%%%%%%%%&&&&&@@&&&&&&%#(#(#####%%%%%%(#((#%&@,   
@@&&&&&&&##%%/####&%%##%######%%&&&&%#%&%%%%&&&&&&%///(////////((((######%##%%%&&%%%%%%%%%%%&&&%%&&&&&@@@@&&&&&&%%####%%%%&&&&&&%##%&&@@@@, 
@@@@@&&&&%#%%#####%%%%#%((%%%%%&&%%&&&%#%%%%%&&&&&&#///(/////(((((%#####%%%###%%%%&&%%%%%%%%%&&&&&&&@@@@&&&&&&&%%&%%#%&&&&&&&&&%&%##%&&&&&* 
&&&&&&@@&&%%%%%%#(%&%%%#%%%%%%%&&%%&&&&%#%%#%&&&&&&&#((((((((((((%%####%%%%%%%%%%%%%%%%%%%%%%%%&&&&@@@@&&&&&&&&%%&&@&&&&&&&&&&&#%&*((#%%&&* 
@&&&&&@@@&&%%%%%###%###%%%%##%%##%&&&#%%%##%&&&&&&&&@#(((((#((((#%####%%%%%%%%###%%%%%%&&&&&&&@@@@@@@&&&&&&&&&%%%&&%%%%%%%%&&&&(#&/,/(((#%* 
&@@&@@@@@@&&&&&%%#####%%%%#%#%%&&&&%%%%%%%%%&%%&&&&&&@#((((#%#((%%%##%%%%%##%%%%&&%%&&&&&&&&&&@&&@@&&&@&%&&%&&%##%%%%%%%%%%%&&&&&%##(((//#, 
@@@@@##((((%&&&&%%%%%%%%####%%%%%&%%%%%%##%%%%&&&&@&&@&(((((#%%#%%%####%##%%%%&&&&&@@@@@@@@&@&@@@&&&&&@%%%%%&%#(##%%%%%%%%%%%%&&&&&&%##(/#%/
@@@%((/((((/%&&&&&%%%%%###%#%&&&&&%%%%%%%#%%&&&&%&&&&&@&((((((#&&%%&&&%%&&&&&&&&&&&&&@@@@@@&@@@@@&&&&@%#%%%%%#(%&&&%%%%%%%%%%&&&@@@@&&%##%##
@%//*///(((#&@&&&&##%%%##%%%%&&&&&%%%%&%%&%%&&%%&&&&&&&@&#((((((##&&&%&&%%%%%%%&&&&@&&@@@@@@@@@@&&&&@%####%%########((((((((((((((#%&@@&##% 
*/(***(#&&&&@@@@@&#%%&%%%&%%&&&&&&%%%%%&&&%#%&%%&&&&&&&@@&##(((#(#%&&%%&&&%&&&&&&&&&&@&&&@@@@@&&&&&&&###%%%%##(((///((((((((((//////((#&@@%%
////#&%%#((&@@@@@%#%&&&&%%#%%%&&&&%%##%&&%%%%%%&&&&&&&&&@@@%##(#(#%&%#%%%%&&%%%%%&&&&&%&&@@@@@@@@&&&%%%#%%##((/////////(((((////////////#@@@
*/(&%((((##@@@@@@%#%&&&&%#(%&%#%%%#%%##%%##%%%&&&&&&&&&&&@@@&########%%%%%%&%%%####%%&&&@@@@@@@@@&%%&%%%##((/////////////////////////////(&@
/#&#/////(@@@@@@@&%%%%%%(%%%&%%%%%##%%%%%##&&&&&&&%%&&&&&@@@@@%######%%%%%&&%%%&&&&&&&@@@@@@@@@@&%&&%%%%#(////***/////////////////////////(&
/%(/(/((/#@@@@@@@@@&%&&%#%%&&%%%%%%%#%#(#%%&&&&&&%%%&&&&&@@@@@&######%%%&&&&&&&&@@&&%%@@@@@@@@@@&@&(###((///****//////////////////////(////(
(%#(/*((/&@@@@@@@@@@@&&&%&&&&%%%%%%%%&#(##%&&&&&&%%%%&&&&@@@@@&####%%%%%%%%%%%&&&&&%%&@@@@@@@@@@@&((((((///*****/////////////////////(((((((
(%((/(((#@@@@@@@@@@@@@@&&&&&&%%%%%%%##&((#&&&%&%%%&&&&&&&@@@@@@##(###%&&%%%%%%&&&&&%%&@@@@@@@@&&&(((((/////***///////////////////////(((((((
/%(*(//*&@@@@@@@@@@@@@@@@&@@@@&%%%%%%((%(#&#%%%%%%%&&&&&@@@@@@@#(((((#%%%%%%%%%%&&&&&&@@@@@@@&&&#(((/////////////////////////////////(((((((
/%**(/((@@@@@@@@@@@@@@@@@@@@@@@&#%%&&&%#%&&###&&%%%%&&&&&&@@@@@#((///((##%%%%%#%%&@&&&&&@@@@@&@#(((///////////////////////////////////((((((
(%/#((/%@@@@@@@@@@@@&&@@@@@@@@@&%#%(**((/#&%((%%%%&&&&&&&&&&@@@#((/////((((%&&&%%&@&@&&&&@@@&@%(((//////////***/////////////////////((((((((
&((//(*&@@@@@@@@@@@@@&&@@@@@@@@&&/*******/(%&%%&%&&&&&&&&&&&@@@#(//////((/(((###%@&@@@@@&&&%@&((////////*********///////////////////((((((((
%((((/(@@&@@@@@@@@@@@@&@@@@@@@@@&&(******///(#%%%%%%%&&%%&&@@@@#(//**//(///(((((&@@@@@@@@&@&@(((//////****************/////////////(((((((((
#((((/&@@@@@@@@@@@@@@@@&@@@@@@@@@#%(***,,//**(&#&&&&&&&&&@@@@@@%////////////((/&&&@@@@@@&@&@#((//////******************////////////(((((((((
((((((@@@@@@@@@@@@@@@@@@@@@@@@@@@/%%(/***/***//#&%&%%&&&%&@@@@@&(///////////(/(&%@@@@&&&&&&&#((///////**************///////////////(((((((((
/(/(/&@@@@@@@@@&@@@@@@@@@@@@@@@@@#//(/***/**(%%%%%&&&@&&%%@@@@@&(/////////////@@@@@@&&&@&@@&(((///////***************////////////(((((((((((
%/(/#&@@@@@@@@@&@@@@@@@@@@@@@@@@@%(/*****/*****/&&&&@@&%##@@@@&@(////////////%@@@@@&&@&&%&&#(((////////**************//////////(((((((((((((
(//(#@@@@@@@@@@@@@@@@@@@@@@@@@@@@#(***/////****/&&&&@&&%#(&@@&&&#///////////(@#&&@@&@@&&@&&((((///////////*/********//////////((((((((((((((
*(/%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@%/*/((##//*****&&&&@@%#((#@&&&&&///////////&@@@@@@&@&&&@&&((((///////////////****///////////(((((((((((((((
/(#(%@@@@@@@@@@@@@@@@@@@@@@@@@@@&%//(((##(/*****(&&&&@&#(/(&&&&&@(/////////(@&@@@&&&&@@&&&%(((/////////////////////////////(((((((((((((((((
"""
therapist_interested = """                                                         /&%%%&%                                                                            
                                               #*****/**********/////((##%&&                                                                
                                             &(,,,,*****/*****//(((((((#((((((##%                                                           
                                           %(,*,**///////***////((((#####(##(((((((#&(                                                      
                                         #(,,,///(//*,***///////(((((((########((#(((#((#&                                                  
                                      &%(,,**/((###(((///((((#((((((###((((###(##((((((#(((%                                                
                                   ,&%#*,*/((#########(######(##(((##((###(######(#(((#((###(#@                                             
                                  &%#/,,*//##(#####((((######%#(##((####((##(###(####((##((#(#//#,                                          
                               #&%(/****/((/(((((((/(((((((((#(#((#/((##%%#(##########(((((((##(//(%                                        
                             /#(/****////((//(//////////(((((((((((#(####%##((#(#####(###(#(((#(((((##                                      
                           *##///**//*(((((////////////////(/(((((##/#((###%##((((##(#######(((#((/(((&                                     
                           &%((//*(/#(//***///////////////////((((((((#%%%###%%#(##(#######((((((((/((((                                    
                           %#((/*/(#/*,***////////////////////////((//(#%%#%####%#(###%######(#(((((((((                                    
                           &#(/*/(%/,,*****///////////////////////////(((#%%%##%%%%(###%####%((#(((((/(((*                                  
                           &#//*(#/,,,*****////////////////////////////((((#%%%##%%%#(##%%#####(#(((((/((#                                  
                           ,%(//#(,,,,*****//////////////////////////////((((##%%%%%%#(###%%%#%##(((((((/((                                 
                            %%//#*,,,*****/////////////////////////////(/(((((###%%&%%%###%%%#%###((((((//(&                                
                             /(/(,,,***////////////////////////////////((((((((####%&&%%##%%%%%%%#((((#((//#&                               
                             /(/*,,***///////////////////////((/////////(((((((((###%&&&%#%%%%%%%##(((((#(//(&                              
                             ///,***////////////////(((#####(#((((((/////(((((((((##%%%&&&%#%%&%%###(((##((//#*                             
                             /#*/(((((//////////((((((###(((((((//((((((//(((((((((#%%&%&@&%%%%%%%%##(((##((//#                             
                             /*////((((////////((((((((((((((((((/((//((((/((((((/(((#%&&&@@&%%&&%%###(#(#((//(#                            
                             ***//(((((//**////(((########%%####((((((((((((/////(/((((#%%%&@&&%&&%###((((#((/*(.                           
                             /(//(###%#((/**//(((######%#%%%%%#((#%#(((((((((////////(((#%&&&%%%&@%%###(((#(((//(                           
                              #/(##%&@%#(/,//((((######%%%%@&%#(######(((((///////////((#%%&@@&&&@&%#%#(((((((//**                          
                              %((###&&%(/*/((((((((((#%%(#&&%#/((##%##(((((////(///////(##%&&&@@&@&%####(((((((/*(%                         
                               /////(((**/(((((((((((((((((((((((((((((((///////////////##%%&%&&@@@#####((((((((///#%                       
                              #,,,**//**/(((((((((/(((((((((((/////////////////////////(#%%%%%%&@%%%#####(((((((///(%.                      
                             ,.,,,****///(((((((////////(//////////////////////////////((%%&%%%%%#%&###(##(((((((///#,                      
                             ,,,,,.,*///(((((((((/////////////////////////////////////((##%%%####&%%#((((##((/((((//(&                      
                           */*,,,,*///(((((((((((////////////////////////////////////(((#%%%%#(###%%%#(((##((/((((//(.                      
                           %***,*,*/(((####(((((((//////////////////////////////////(((##%#%%#######%%#((#(((((((((((%                      
                          .#*******/(((%&@@@#((((((//////////////////////////////((((((########(####%%#(/(#((((((((((#/                     
                          (/********//(##########((/////////////////////////////(((((((#############%%#(((#(((((((#(((/                     
                        ./**,*****,,,*/(((((((((/////////////////////////(((((((((((((###((############(#((((((#((#(((#,                    
                       ./**/*****,,,,*/////////////////////////////////(//((((((((((((##(####(######%%#(((((((###(##((((                    
                      /#**/*/****,,,,*****/////////////////////////////((((((((((((((((((((((((#####%%#(((/((##%####(((#/                   
                    .&(**////***,,*//((((((((((/////////////////////(((((((((((((((((((((((((/((##(#%%((((/(###%###((((#&                   
                     %/**////(,*,/(###(#########((//////////////////(((((((((((((((((((#((((((#%&#(#%%((#(/(##%%#%##((((%,                  
                     (/*///(//***/(##////(///(#(####(((/////////////(((((((((((((((((###%##%%%%#####%(((#(/(##%%##%##(((#&.                 
                     #**/((/(//**/(#&@&##%%&&&&%%%%&&&%#///////////(((((((((((((((((##%%%%##%%%####%#(((#(/(##%%%%##(#(((%#                 
                  ,//**/(/**/((***,,,*/((((((((((((#(((///////////(///((((((((((((((##%%%%%###%#####((((#(//##&%%######(((%.                
                 ,(****/**,//*/**,****//*////((((((((/////////////(/(((((((((((((((##%%&%%%#%%%####(//((#(/((#%%%###((##(((/                
                %/*****,***/*/(#,,,*/(((((####(((((//////////////(////((((((((((((###%&&%%%#%#####((/(((((/(((####(((#####(%                
               %(***/*,**/**(##(/,,**//((((((((((((//////////////(////(((((((((((###%%&&&&%#%####((/((((#((((((###(((((((###%.              
              *(**/*******/(((#%(,,***/////////////////////////((////((((((((((#####%&&&&%%#####(((/((((#((((#((((((((((((###/              
             %#/****/**,*///(#(%#*,,,,,******////////////////////(/((((((((((#######%&@&%&%#####((((((((#(((#((((((((((((((####             
             #(**,***,*/*///((##(/,,,,********////////////////((((((((((((#####((###&@&&&%%(#((##//((#(##((((#((((#((((((((#(##&            
            ,/,*****,*((/*///(((*(*,,*******////////////////(((((((((((######((((##%&@&&&%((####((/((#(###(((((#((#((((((((#####(           
           .#/,,,**,*((//*//((/**//****/////////////////(((((((((((########((((((##%@&&%#(//(##(//((((####(((##(((#(((((((((#####&          
          */*,*****,**//((//((((//(#//////////////((((((((((((###########((((((((##%@&%%#(/(###(//((((###(((#(###(((#((((#(((####%          
        ,#/****,**/,**/((#((/(((//###((//(((((((((((((((((((((((((((((((((((((((##%&&%%&####%##(/((#(####((((#(##(((#(((((#(((((%%          
      ,#*********(/**//((((/((((*/(((/(/(((%###((///((((((((((((((((((((((((((((##%&%%%%(#(###(//(((#%###((((##(#((((#((((#((((#%/          
    *#**/*******////,//((((/(((/*////((/((#%#%##((//////////////(((((((((((((((##%&%&%%##(####//(((####(#(((((###((((#(#(##(((/#%           
  .&((#/,**////*/**/**//(((/(/***//((((((#%#%%%##((//////////////(((((((((((((##%&&%&#%##(###(////#(##((((((#(((%#(((#(%#####(((%&          
###*,*/((///////**//*///#((**,****/(((##%%%##%%%#(((/////////////(((((((((((((#%%&&%&%##(###((/(/(#####(#((###((##((#%(%%#(###((#&,         
,,**/(#((//(/(/*/****///**/*,**///((((#%%&%%#%&&%##((//////////((((((((((((((##%&&&&%##(####((//#(##(###((##%%#((#((((#%###%%#(#(#&         
/////(((/((/////*******////***/(/////##%&&&&%#%&%##(((////////(((((((((((((###%&&&@&&##(%%#((//(#((####(((##%##%#((##((#%##%%#((#(%#        
((//(((#####(/***/***,,**/*///*//,*/(##%&%@&%#%%%###(((//////(((((((((((((###%&&&@@&&%(#%%#((/####(####((##%#%#%%%((###(##%#%%(//#(#        
/(#(##(#%%%%%%/**/(/**///(/(*/(**//(#%%%&%&%%#%%%###((((((((//(((((((((((##%%%%&&@@%%%(#%%%#/((###(##(#####%###%%%#%#(####%%%##(/#(#        
##%%%%&%%&&&%%/**//*/*//(#(//(///(##&%#%%%%#&%%%%####(((((((((((((((((((##%%%%%&&&%%%######(((((##(#########%######%#%#(##(%%%###((#&       
&%%&&%&&&&&&#&#**/*/**//#(////(((/#&&%%#%%%%&#%%%#####(((((((((((((((((##%%%%%&&%%%%%%#####/#(#((((#%#(########(##%%%%%%%%##(%######&       
&&&&&&&&&&&&%%%/**/(*///(//(//(((#&&%%#%&%%&&#%%%######((((((((((((####%%%%%&@@%#%&%%#####(%#((((##(#%#(###(((##(((#%%##%%%##(((####%.      
&&&&&&&&&&@&@&&%//(/////((((/(/((#%%%&&&&&&&%#%%%#####################%%%%&&&%&%%@%%%####/#%((((#((((#%#(#(((((((((((###%%%%#%#######%%     
%&&&@@@@&&&&&&%##/((/*//((#(((#%%&@@@@@@@@&&#%&&%%##########%%######%%%%%&@@@@&@@%&#%##((#%#((((###((#(#%(((((##(((((##(###%%%#######%%%*   
&&&&@@@@@&%@&&&&%&(###/((##((##&&%&&&&&&&&&#&&#&%%%#################%%%&@@@@@&&@@&%#%%#(((##((((#%###(#####/(((((#%%##(###%#####%&&&%%&&&/  
&&&&&@@@@@&@@@@@@&&%#%#((#####%&%&&#%%&%&&%#&@&#&%%%###(((##########%%&@@@@@@@&@@&&#%#%(#(((#######%%###%#%%%#(((((#%%%%%%%%%%##%@&@&&%&@&# 
&&&&&&@@@@@@@@@@@@@%%%%#####%%&%%&%%#(#&&&%%%@@&#&&&&%#(((((((((((#%&@@@@@@@@@&&&&&%%#%(#(((%#%%###%&&#((###%%%%###(((##%%%#%###&&&&@@&&@@&&
&&&&&&&&@@@@@&@@@&&@&&%####%%#%%#&%%%#&&@&%%%&@&&#%&&&&&&&&&%####%&&@@@@@@@@@@@@@@@&%%%((##(#%%%#%%####%#((#%%&&&%%%%&&&%%%%%%#%&&@@@@@&@@@@
&&&&&&&&&@@@@@@@@@&&@@&&####%%%%%%&&%&@@&%%%&&@&&&#%&@@&@&@@@@@@@@@@@@@@@@@@@@&@@@@@&#((###%##%#%&&&@@&&&%#((#%&&&%%%&&&%%####%@@@&@@@@&&@@@
&&&&&&&&&@@@@@@&@@@@@@@@&&#%##%%%#%%&&@@&%#((#%&@&&&%&@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@%%%(#######&&%@&@&&@&%&&%&%%%%##%%&%%%##(%@@@@@@@@&&&@@@
&&&&&&&&@&&@@@@@@@@@@@@@@@&%&%%%###&&@@&@%%%#(#%%&&&&%&&@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@&%#(###%&%&&%&%%%%&%&&&&&%%####%%%%##%&@@@@@@@@@@@&@@@
&&&&&&&@&&&&&@@@@@@@@@@@@@@@@&&%###%%&&@@@&%%&%&%%&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%#(%%%###(((##%%%&&%%%%(####%%%%%&@&@@@@@@@@@@@&@@@
&%&&&&@&&&&&&&@@@@@@@@@@@@@@@@@@&%((#&&&&&&&%&%&&&%&@@@&&&&&@&&&&@@&@@@@@@@@@@@@@@@@@@@@@@%%&#((((((##%%%%%%%#(/(#%#%%&&%@@@@@@@@@@@@@@@&@@@
%%&&&@&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@&@@@&@@@&%&&&%%&&&&&&&@&&&&&&@@@@&&@@@@@@@@@@@@@@@@@&%%%%%%%&&&%&%#%&%%#######%%&&&&@@@@@@@@@@@@@@@@@@@@
%%&@&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@&@@@@@@@@&%%%&&@@@&%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&%%%##%&@&@&&&&&%##%##%%%#%&&&@@@@@@@@@@@@@@@@@@@@@@
&&@&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%%%%%%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%%&&%%&&%%&&&&&&@@@@&&&&%%&&&&@@@@@@@@@@@@@@@@@@@@@@
&@&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&%%%%%&&&@&@@@&@@&@@@@@@@@@@@@@@@@@@@@@&&&&&&%&@&&&@&@@@&&@&&&%%%&&&&@@@@@@@@@@@@@@@@@@@@@@@
@&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&%&&@@@&&&&&&%%%&&&@@@@@@@@@@@@@@@@@@@@@@@@@
&&&&&@&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&%%%&@@&&&&&&&%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&&&&@@&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&%&%%%#%%&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&&&@@@&&&&&&&&&&@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%&&@&&%&&@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&&@@@@&&&&&&&&&&&@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%&&%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&@@@@@&&&&&&&&&&&@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@&%%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
"""
therapist_humour = """                                                                                         &&##%                                              
                                                                           /%%(/**,*/**,,.....,*/#%%@                                       
                                                                      &%(/**,,..   ....,,,,,,,**,,,,,******#(                               
                                                                  %(*,...........,,,,,***/**********,.,,******/(#                           
                                                              *#* .,,,,.,,,,,,,.,,,,,***////**///*//*,,,,,*******/%@                        
                                                          .%*..,,,,.,,*,,,,,***,,,*******//////////**,,,,*********/((                       
                                                         (/,.**,,,,,,,,,,...,,,**////////////////*////***********,**(&/                     
                                                       %/,,**,,***,,*,,,,***,*******///(((((//(//////((((///////((//*/(%,                   
                                                    ,*,,*//*************/((####((#(##(((((((///////////((((((((/((#(/*,*%&.                 
                                                 ((**,*/(*******//(((//(((######(((////////////////****////(((((((//((/**(#/                
                                               #*,,,*(/******/(###%%%#####((////////////////////***********///(#((/(((//**/%                
                                             %**,,*/((/***//#%&&&%%#(((/////////////*/*************************//((((((//**/#               
                                           .#**,**/(//**/(#&@&%%%#((////////////*********************************///(#(((***(%              
                                          *#****/((((///#&@&%%%##(/////////////////***////**************************//(#((**/#(             
                                          #**/*//((#(/#%&&%%%##(//////////////////////////////***********************///((/**(%             
                                         (**//*/####(#%#%%%##((/////////////////////////////////////*******************//((/**(%            
                                        &**/***/(#%##&@&%##(((/////////////////////////////////////**********************/((**(%            
                                       /(//////(#%%#&@&%##((/////////////////////////**///////////////********************/(/**%/           
                                      #/*/////((#%%%@&%##(((//////////////////////////////////////////*/*******************((/*//           
                                   %#(**//////((#%%@@%%##((////////**///////////////////////////////////*****************,,*((*,,           
                                .#//,,*//////((##%&@&%##((///////***//(((##########(/////////////////////***************,,,*///,/           
                             .%(***,**/***//(((#%%@&%##((//////**///(((((((((((((###(((/////////////////////////********,,,*/(/**%          
                           #(**,,,*//****//(####%&@&###(///////////////////(((((((((((((//////////////////((((((((///***,,,*/((/*#,         
                        /***,,,,*******///((((#%&@&%##((//////////((((((((((((((((((((((((/////////////////////////////*,,,*/#(/*#          
                       #*,.,,,*//*****///((((#%%@@&%#((////////((((((((########(((#####((((/////////////////////////////*.,**##/*%          
                     ./*..,,**/*****////(((##%%&@@&%#((///////((((##%%####((((###########((///////////((((((((//////////*,,**(#(/           
                     //,,,**//****/////((##%%%%&@&%#((///////(((##%%%&&@@%&&&&%%#########((///**////(((((#####((((/////**,,**((/(           
                     (*,**///**/////((#(#%%%%%%@@&%(((////////((((#((#########((#%%%####(((///***/((((#%####(#(((##((///*,,**((/*           
                    #/*,**//**/////(((#((%%%%%&@@&#((//////////////((((((((((((((((((((((((//****//((#%&&&%%&&%%%(/(((///,,*//*#%           
                     *,**/(/*/////(((####%%%%&@@@&#((/////////////////((((######((((((((((///****///(###%##%##((#%%%#((//*.,//,/%           
                    #,,*/((/*////((((((##%%%&&@@@&%((///////////////////////////////((((/////****////((((((((((((////((//*.,**,,,/          
                   .(,**//#////////(((((#%%%&&&@@@%((////////////////////////////////////////****////////((((((((////*****.,***,,.*         
                   /#**//((/*////((/(/((##%%&%&@@&%#((//////////////////////////////////////*/*///**////////////////*****,.,,***,..,#       
                   .(***((//**///##(((/((##%&%&@@&%#((/////////////////////////(((((((//////////*/****//****///////******,,,**/**,,,,.      
                    %*///////////###((/(((##%%&&@&%#((//////////////////(((((((##(///(((((///////****/////***************,,,*/.***,,,,/%    
                    #*/*//(//////((%((((((#(#%%&&%%%#((/((((((//////((((((########(((######(((((/////*/(((///*****//*****,,,/**.*/*,,,./*   
                   */**/(//(//////(#%(((((###%%%&&%%#((((((((((((((((((###########%%%%&@&#####((/(((///(##(((/////////****,*//*,,*/*,,,,#   
                 ,#/**//////*////(##%(((((####%&%&&%#(((((((((((((((######(((((((((######%####(((#(((//((#%##((//////****,,**///,,/**,,,*(* 
                ./****/**////((//((##/(((##%%##&&@@%##(((((((((((###%%##(((((//////((((#####((//////////((#%##((/////****,,//*///.//*,,,*/% 
                /******//////(//((##(/((##%%%%#%&@@&%#(((((((((((##%###((((///////////(((((((/////*****///((#%#((/////***,*((//*////,*,,,*/(
               ******//((((//(/((##((((###%#%%%%&@@&%#(((((((((((#####((((((((((((((((((((/////////******///(#%#((////***,(((////*//**,,,,*(
              .**///(((#(((/((((##((((###%%#%%##&&@@%##((((((((((#(##%%&&&%%%%%%%%%%%%%%%%%####(#((((////////((%#(/////**/##(((////***,,,,/(
              /*/(((##((((///((#(((###(##%######&&@@%%#(((((((///(((((##%%#(((//((//#(//(###(/((#//(((##(((//((##(////***#%##((//(///*,,,,/#
             ////(##/**((((/((((####(#%%#######%&@@@&%##((((((///((((((((#####(((//*(/****/****//**/**/#&&&%#((#(////***######((//////*,**(#
             //(((*,*(((((((((#####%%%%##(#####%&&&&@%##(((((((//((((((((###(((##%%%%#(/**/****(**///(((((//((((///****/###((((((/////***/#%
            ,#%%#*,*//((((((%%##%%%%%#(((######&@&&&&&%##((((((///(((((((((######(((((((####((((((((//(/////((///****/%%%##((((((/////***## 
            .%%%(,/(((((((#%%##%%%%#((((((###%&@&@@@@@&%##((((((//((((((((((((#########((((((((((((((//***///(//****/%%%%##((((((/////**/*  
            %%%%(##(##((##%%##%%%##(((((((##%&&@@@@@&&&&%#((((((///////(((((((((((((###########((///******/////****/%%%%###(##(((///*/**(   
            &##((#########%%%%%#(((###(((##%%&&&&&&&&&&&&%##(((((////////(((((((((((((((((((((/////********///****(%&&%%##(##(((//////**/   
            .((((##((##%#%%%%#######(((##%%%&&&&&&&&&&&&&&%###(((((/////////((((((((((((((//////////************/#%&&%%###(((((//////***/   
             ///(((#%%%##%%%########%%%%%%%&&&&&&&@@&&&&&&&&%##(((((///////////////////////////////***********/(##%&%%###((#((((/////****   
            *//(/(###%%#%%%######%%%%%%%%%%&&&&&&&&&@@&%%%%&&&%###((((////////////////////******************/(%###%&%####(##((((/////**,/   
           /((//####%%%%#%%%#%%%%&&%%%%%&&&&&&&&&&&&@@@&&%##%%&&&%###(((//////////////////****************/#%##(##&%####(##((((/(///**,,*   
          *((/(###%%%%%%##%%%%&&&&%%%%&%%%%%%%%%&&&&&&@@&%%###%%&&&%###((((//////////////////***********(&&&%#((#%%#######((#(((/*//**,,((  
         ,((//###%%%%%%%%#%%&%&&&&%%%%%%%%&&&&%%%&&&&&&@&&%%%%%%%%%%%%%####((((/////////////////*****/%@@&&%%%(#%&%#####(#((///////***,,(/  
        *##(/(###%%%%%%%%%%%%%&&%%%&&%%%&&&@@&&&&%&%&&&&&&&&&##%%%%%%%%%%%#######((((((((((((//////(%@@@&&&%%#%%&%######(((/////(/*/**.,(   
        ###/(##%%%%%%%%&&&&%%%%%%&&%###%&&@@@@@@@&&&&&@@@@@&&&&%#%%%%%%%#####%%###########(#((##%&@@@@&&&&%%#%%%%%####(((((//////,*(**,*#   
    .,(((%(/(###%%%%%&&%%%&&%%#%%%#((#%%&&&&@@&&@@&@&@&@&&&&&&&%%%##########%%#####((((((###&&&&@@@@@@&&&&%%%&&###%########(((//*.,(*,,/    
 ,#(((#((##/((%###%%&%&&%%&&&&&%%%#%%%%#%&&&&&&&&&&&&&&&&&&%%&&%%########(##########(((####%%&&&@&@&@&&&&%%&%(&&%%%###%%###((//**.*(*,*.    
#(((#%%/*(####(#%##%&&&&%%&%&&@&%%%%%%%%%%%&&&&&&&&&&&&&&&&%%&&%%#########(#########((###   ,&&&@@@&&&&%%&&%#%&%#%#########((//**./(/**.    
(#,   #(/((#(#####%%#%%%&%%&%&&&%%%%%%%%#%&&&&&&&&&&&&&%%&&&&&&%%%%#########(#####(((##%(      %&@@&&&%%&&%#&%%%#%#%#######(((//**((,,*#    
%   *//*((((###%%%####%#%#%%%%&&&%&%%%##%&&&%&&&&&&&%%%%%&&&%%%%%%%%#%##((##(#((((((###*(%,  (&&@&@@&&%&&%#%&&#%(%%%#((###(((((/*/(/, ,/(   
   *//((##%%%%#%%%%%%%%%%%&%%%%&&&%%&%#%%%%%%&&&@@&&%&&&&&&%%%%%&%%%%#####((#((((#####(////%&&&&&@&@&%&&@&%%%%%((#&%%#####(((#((//(,.,./*   
%(/(/(###%%%%%%&&@@&&&&@&&&&&%%%&@&&%%%#%%%%%%%&&&&&&%%&%%%%%%%%%%%%%%#%#((#(((#####&&###%%@@&&&@&%&&%&&&&%%%%%%#(#%%%##%##((##(*.(* ..*#   
///((#(####%%%%%%%%&@@@&&@@@&&&&%%%%&&&&&%&&&%%%%&&&&%##%&&&%%%%#%%%%%%##(((((#####&&%%%&&&&%#&&%##&&%&&&&%%%&%#%##(#%%##%%####(/*(/*,,/*   
((#####%###%#%%%%%%&&%%&&&&&&@@&&&&%%&&@&&%%&@&%%%%&&&%#%&&&%&%%%%###&%%###((######%%&%%%%%#%##%##%&&&&&&&%#%%%%#%%%#(((#%#%##(//*#//*/*/   
(########%#%%%%%%%%%%&&&&&&&&&&&&&@@@&&&&&&&%&&&&%%%&&%##%&&&&&%&%%%#%%%###((###%&&&&&&%%%%%#(%#/#%&%&&&%%&##%%%%%##%%%(##%##/*/(#((/*/(,   
(((#((####%%%%%%%%%%%%%%%%&&&&&&&&@@&@@&&&&&&&&&&&%%%&&%#%&&&&&&&%%%&%%%%%%###%%&&&@@&&%%%%#%&%#%%&&&&&&&%%%(%%%%##%#%%##(//*//(#(//***,    
########%%%%%&&&&&@@@&&&&&%%%%%&&&&&&&@@&&&@&&&&&&&&&@@&&&%%%&&&&&&%%%%%%%&%%%&&@&@@&&&%&%@%&&#((&&&&%&&%%#%#(%%%%##(((////////(#(*/*/      
####%%%%%%%%%####%%%&&@@@@@@&&&&&&&&&&&&&&%%%%%%%&&&&&&&&&&&&&&%%%%%##%%%&&%&&&&&&@@&&&&%&&&&%##(&&&&&&%%%%%&##%%%####((/////(((/*/#        
@&&&&&&&&&&&%%%%%%%%%%%%&@@@@@@@&&&&&&&&&&&&&&&%%%&&&&&%#%&&&&&&%#(####%&&%&&&@@&&@@&&&&&@&&&%%%#%&%%%&%%##%&%%#%%#%##(((/((#((*#&,         
&&&%%%%%%%%%%##%%&&&&&&%%%%%&@@@@@&&&&&%%%#%%%%%%&&&&&&&&%%%%%%%#(##%&&&&&&&&&@@&&&&&&%&&&&&%%%%%#@&%%%%%#%%%%#%%%#####(####(#%             
&&%&&&%%&&%&&%%%%%%%%%%&@@&&&&&&@@@@@&&&&%##(((##%%&&&&&&%%%##%##%&&&&@&&&&&@@&@@@@@@@@&%%&&&%%%%%&&%%%&%%%%&#%%%####((#//%&&               
&&&&&&&&&&&&&&&%&&&&%%%%%%%&@&&&&&&@@@@@&&%&&@&@@@@@@@@@@&&&&&&&&&&&&&&&&&&&@@&&@@@&&@@@@&%%#%%##%&&%%%&%&%%%%%#((%%###                     
&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%&@&&&&&@@@@@@&&&&&@@@@@@@@@@&&&&&&&&&&&&&&&&&&&@@@&@@@@&&&@&%%%%%##%&&%%&&&&%%%##((%##((/                     
&&&&&&&&&&&&&%&&&&&&&&&&&&&&&&&&&&@&&&&@@@@@@&&&&&&&&@&&@@@&&&&&&&&&&&&&&&&&&@@@&&&@@@@@&@&%%%&%#%&&&%&&&%####(##((((%                      
&&&&&&&&&&&&&&&%%%%%%%&&&&&&&&&&&&&&&&&&&@@@@@@@&%&&&&&&&&&&&&&&&&&&&%&&&&&&&&&@@&&&&@@@@&&&%%%%%%&%%%%%#&&%%####((/(                       
&&&&&&&&&&&&&&&&&&&%%%%%&&&&&&&&&&&&&&&&&&@@@@@@@&&%&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@&&@@&@@&&&&%%%%%%##%(#%%%#%%##((/(#                       
&&&&&&&&&&&&&&@@@@@&&&&%%%%%&&&&&&&&&&&&&&&&@@@@@@@@&%%&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@&@@&&%&&%%%%##########%%&%%%(                       
&&&&&&&&&&&&&&&&&@@@@@@@&&&&%%&&&&&&&&&&@&&&&@@@@@@@@&&%%&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@&&&&&%%%%%%######%%##&&&&%%(                       
&&&&&&&&&&&&&&&&&&&&&@@@@@@&&&&%%%%&&&&&&&&@@&@@@@@@@@@&%%%&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@&&&&%%%%%###(######(%&&&%%(                       
&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@&&&&&&%&&&&&&&&&&@@@@@@@@@&%%%&&&&&&&&&&&&&&&%&&&&&&&@@@@@@@@&&&%#%%%###(#######&&&%%%.                      
&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@&&&&&&&&&&&@@@@@@@@@&&%%%&&&&&&&&&&&&&%%&&&&&&&&&@@@@&&&&%%%%%%###(##%%#*&&&%%%%                      
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@&&%%&&&&&@@@@@@@@@&%%%%&&&&&&&&&&&&%%&&&&&&&&&@&&&&&&%%%%%%%#(##(%%#*,%&&%%#/                     
"""
therapist_shocked = """                                        .#((#    /((################%%%&@&                                                                  
                                 &%##((#%##((%.  /((((((((///(((((#####%%%&@@                                                               
                           *%#########(((((##(#  #((##(((((((((((#(#(#####%%%%%&&&@@.                                                       
                         &%########(((#%##(((#%##(((#%###%%#%#%&&&&%%%#####%%%%%%%%%%%&@,&@                                                 
                        /%,  &&@@ &%#((#%%######%#%%%%%%#%%%&&%%&&%%%%#####%%%%%%#%%%%%%%###%%&                                             
                       #%    %%.  /((((########%%%%%%%%&%%%%&&%%%%%%%%####%##%%##%%%%%%%%%%&%%%%&,                                          
                      ,(*     .%#(//((######%%%%%&%%%%%&&%%%%%%###%%%%###%%%%#####%%%#%%%%%%%&&%%%%@                                        
                      ,(&.&&&#////(((#######%%%%%%%%%%%&&&###%%######%%##%%%####%%##%%##%#%%%%&&%%%%&%                                      
                       #(#(((///(((((##%%#%###%%#%%%#%%#&&%####%#####%%#####%%%#####%%##%%%%%%%%%%%%%%&&                                    
                        ###((((##(((###%%%%%##%%##%#%#%%#%%%#####(####%###%%#%##%%%####%%%##%%%%%%%%%%%%%#&,                                
                        /(#(####(((####%%#######%##%#%##%####(#%##########%%##%#####%%##########%%%#%%%%%%%%%&&&&                           
                        %(/(((((((#####%%%#######%%###%######%###################%%%%%%#%%%#######%%&&&&&%%%%%%%%%&                         
                      &%((((((#((#######%%%%##(####%%%(##%###%###########%#####%%%%%%%%%%%%%#%%%%%%%%%%#%%%&%%%#%%&&                        
                      #((((#((#(#(((###%##%##%#######%%#((%%%#%%###########%#%#%%%%#%%%%%%%%%%%#######%%%%%%%&%%%&%%#                       
                    %(((###(#((##&############%#%####%##%%##%%%%%#######(#######%%%%%%%%&%%%%%%%%%%%%%%%%%&%%&&%%%&%#/%&                    
                 ,%#((#%##((##(((###(#((#######%%%%#####%###%%%#######((((((((((######%%%%%%%%%%%%%%%%%%%%&&&&&%&&&&%%%%#%&(.      *@@%     
                (%#((%%%#((####((((###########(####((((((#######(((((((((((((((((((((((####%%%%%%%%%%%%%%&&%&&&&@&&&&%%%%%%%%%%%%%%%%%&@    
               &%#(#%%####%%#%#####(#######((((((((((((((((((((((((((/////////(((((((((((((##########%%%&&&&&&@@@@&&&%%%&&%%&&&&&&&&%%%%    
                #(#%%%%%%%%%%#%#####(((((((((////////////////////////////////////////((((((((((##########%%%&&&&%%%%&&&&&%%&&&&&&&&&&&%%&@  
                #(#%%%%%%%%%####((/((((((////////////////////////////////////////////////((((((((((#####%%%%&&&%&&&&&&&%%%&%&&&&&&&&&&&&%&& 
               %(##%%%%&%%%###(//(/(////////////////////////////////////////////////////////(((((((((#####%%%%&&&&&&&&%%%%&&%&&&%%%%%&&&%%&%
              /%##%&&&&%%%%##((//(////////////////////////////////////////////////////////////(((((((((####%%%&&&%%%%%%%%&&&&&&&&&&&&&&&&%%&
              /###%%%%&%%###((((/////////////////////////////////////////////////////////////////((((((((###%%%%%%%%%%%&&&&&&&&&@@@@&&&&&%%%
              /%##%&&%%%%%##(((((//////////////////////////////////////////////////////////////////(//(((((###%%%&&&%%&%&&&@@@@&&&&@@@&&&##(
              &###%%%%&%%%##((((///////////////////////////////////////////////////////////////////////(((((##%%&%%%&&%&&&@&@@@@@&@@@@&&&%%%
              %###%%%%%%%%###((//////////////////////////////////////////////////////////////////////////((((#%%&%%&%%%&&&&&&@@@@@@@@&&&&%%%
              (###%%%%%%%%###(////////////////////////////////////////////////////////////////////////////((((#%%&%&&&&&&&@@&@@@@@@&&&&%%#%%
             #&###%%%%%%%%%%((////////////////////////////////////////////////////////////////////////////((((#%%&&&&&&&&&&&@@@&@@@&&&%%%%##
             &%((#%%%%%%%%%#/////////////////////////////////////////////////////////////////////////////((((##%%&&&&%%&&&&&&&@&&&&&&&%%##%&
            @&%#((#%%%%&&%%((/////////////////////////////////////////////////////////////////////////////((((#%%&&&&%%%%&&&&&&&&&&&%%###%& 
           #&&%%#((%%&%%&&%#(//////////////////////////////////////////////////////////////////////////////(((#%%&&&&&%#%%&&&&&&%%#%##%%%&/ 
          @&&&%%##%%&&%&&%%#((////////////////////////////////////////////////////////////////////////////((((#%%&&&&&%%#%%&&&&&%%##%%#%&   
        .@&&&&%%%%&&&@@&&&%##(////////////////////////////////////////////////////////////////////////////((((#%%%%&&&&&%%%%&&&&&&&&%%((&,  
       @&&&&%%%%&&&@@@&&&&%%#(/////*///////////////////////////////////////////////////////////////////////((((#%&&%%&&&%%%&&&&&&&&&&&&#(#& 
      (&%%%%%%&%%&@@@@@&&&%%#(/////*///////////////////////////////////////////////////////////////////////((((#%&&&&&&&&&%&&&&&&&&@@@&&%##%
@@&&&@&%#%%%&&&&&@@@@@@&%&&##(/////*////////////////////////////////////////////////////////////////////////((((#%&&&&&&&&&&&&@@@&&&&&&&&&%#
&%%%%#%%%%%&&&&@@@&&@@@&&&&%#(///*******//////////////////////////////////////////////////////////((((///////(((#%&&&&&&&&&&%%&&&&&&&&&&&&&%
%%%%%%%#%%%%&&@&&&&@@@@@&&&%#(//******/////////////////////////////////(//(((((((((((((((##########(((####((((((#%&&&%%%%%%%%%%&&&&&&&&&%##%
%%%##%%%%%&&&&&&&&@@@@@&&&&%#///////(((((((##((((((((((((((((((//((/(/(((((((((((######%%%%#%%%######(((((((((((#%%&%%#%%%%%%%%%%%%%%&&%#((#
###%%&&&@@#, &&&&&@&&@@@&&&%(/((((((((#####%%%%%%%%%####((((((((((////(((((((####################((((((((((((((((%%%%%%&%%%%%%%%%%%%#####(((
%&&&&@%       &@&@@&&@@@@&&%(/////(((((###################((((((((///(((((((((##########%%%%%%%%#######((((((((((#%%%%%%&&&%%%%%%%####(##(((
##(            @@@&&&@@@@@&#(/////(((((#####%%%%%%%%%#######(((((/////(((((((#####%&&&&&@@@@@@&&&&%%%%%##((((/(((#%&%%%&%%%&&&&%%%##(((((###
                @@&&&@@@@&&#(///((((##%%%&&&@@@@@@@@&&&%%####(((//////((((((####%%%&%%@&&@@@&&&((#&&&&%%##((///((#%&&%%%&&%%%%%%%%%###(((###
                #&%&&@@@@&&#(////(##%%&&&%((%%%@@@@@&%%&%%####(//////////(((####%&&%##&&@@@@&&#((%%######(((///((#%&&&%%%&&%%%%%%%%##((((((/
                 &%%&&@@&&&%#////(((#(####(/(&&@@@@&%#%%%%#((((//////////(((#((#%%&%%%##&&&&%########((((((////((##%&&%%%%%%%%%%%%%####(((((
                 @%%&&@@&&@&%////////(((###(#(#%&%%##%%%%##((((//////////((((((####%%%%%%%#%%####(((((((((//////(##%&&&%%%%%%%%%%%%#%%%##(((
                 @%%%&&&&&@&%///////////((################(((((///////////((((((##%%%%%%######((((((((((////////(##%%&&&&&%%%%%%%%#%%&&%%###
                 @%%%&&&&@@@&(/////////////((((((########((((/////////////(((((((###########((((((((((//////////(#%%&&%&&&&%%%%%%%%#%%%%&&&%
                 #%%%%&&&@&&&(///////////////(((((((((((((////////////////(/((///(((######(((((((((((((/////////(#%&&&&&%&&&&%%%%%%####%%&&&
                 @%%%&&&&&&&&(////////////////((((((((///////////////////////////////(((((((((((((((((((///////((%&&&&&&%%&&&&&%%%%###%%%%&&
                 @&%%&&&&&&%%(//////////////////////////////////////////////////////////((((((((((((((((///////((%&&&@@@@&%%&&%&&%%%%%%%%%&&
                  &%%&&&%%%%%#////////////////////////////////////////////(/////(/(///((((((((((((((((((((((((((#&&&@@@@@@&%%%&%%%%%%%%%%%&&
                  &&%%%%%%%#%#/////////////////////////////////////////((/////((((((((((((((((((((((((((((((((((%&&&@@@@@@&&%%&%%%%%%%%%%&&&
                   #%#%%%&&%(#(////////////////////////////////////////((((((((((((((((((((((((((((((((((((((((#&&&&@@@@@@&&&%&&%&&%%%%&&%%#
                   /&##%%%&%#*/////////*///**//////////////////////////(((((((((((((((((((((((((((((((((((((((#&&&@&&&@@@@&&%%&&&%&&%%&&%%%#
                   .&###%%%%%%(//////***/*********////////(//////////////((((((((((((((((((((((((((((((((((((#&&&&@@&&@@@@&&&&&&&%&%%%%%%###
                    .&##%%%%#%&&%(/****************/*/////////////////////((((((((((((((((((((((((((((((((((#&&&&&@@&&@@@@@&&&&&&&&&%%%%%%##
                     &%(#%%&&%%&&&#********************////(////////(//////(((((((((((((((((((((((((((((((((%&@@@@@@@@@@@@@@@&&&&&&&&&&%%%%#
                     #&#((%%&&&&&@&%*******************//((((((//((((((((((((((((((((((((((((((((((((((((((#&@@@@@@@@@@@@@@@@&&&&&&&&&&&%%%%
                    .@&&&(/(%&@&@@@@#******************///(((((((((((((((###%%###((((//((((((((((((((((((((&@&@@@@@@@@@@@@@@@&&&&&&@@@@&&%%%
                     &@&&@&%%%&@@@@@@/*****************////(((((((#######(######((((/////(((((((((((/(((((#@@@@@@@@@@@@@@@@@@@@&&@@@@@@@&&&&
                   /@@&&@@@@@@&&@@@@@&*****************///////((((((#(((((((((((((((((/////((((((((((((((#&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&
                /#@@@@&&@@@@@@@@@@@@@@#****************//////////((((((((((((((((((((((//((((((((///(((((%&&%%&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@
           *#@@@@@@@@@&@@@@@@@@@@@@@@@@(****************////////////((((((((((((((((((((((((((((((((((((%&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    ,(/#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(*****,************/////////((((((((((((((((((((((((((/(/((((((%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&(***,,***********////////(((((((((((((((((((((((((((((//(((((%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(**,,,*********//////(((((((((((####(########%%%%##((((((((%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&#**,,,***//(((((((((((#######%%%%%%%%%%&&%%%%#####(((((((%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&%**,,*****/((####%%%%&&&&&&&&&&&&&&%%%#######(((((((((#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%/********//((((((########################((((((((((#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(********//((((((((((##################((((((((((#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&*********//((((((#(################(((((((((((#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&*********////(((#######%%%########((((((((((#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/******///////((((((((##########((((((((((#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*****/////////(((((((((((((((((((((((((%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&/****/////////((((((((((((((((((((((#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%/////////////(((((((((((((((((((#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&@@&&&@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@%//////////((((((((((((((((((#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@&#/////((((((((####(((((##&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@&&&&&&&&&&&&&&&&&%&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@%(((((((##########%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&%&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&%&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
"""



def main(): 
    # Create file
    def get_filename(): 
        today = date.today()
        today.strftime("%d_%m_%Y")
        filename = f"thoughts_{today}.txt"
        text_2.config(text=f'Date: {date.today().strftime("%d/%m/%Y")}')

        if not os.path.exists(filename):
            print('New file created:', filename)
            open(filename, "x")
        return filename
        

    brain = Brain()
            
    # GUI starts here
    # +=========================================================================================+
    # Function to update the text
    def replace_random_chars(state: int = 0, scale: int=1, num_chars: int = 10, replace_char: str = '░') -> str:
        string = brain.string
        for i, _ in random.sample(non_empty_chars, min(num_chars, len(non_empty_chars))):
            string = string[:i] + replace_char + string[i+1:]
        # Add a 'convolve' function where it saves the index of all 'replace_chars' and like spreads out around from them
        return string
    
    def replace_random_chars_2(state: int = 0, scale: int=1, num_chars: int = 50) -> str:
        string = brain_string2
        for i, _ in random.sample(non_empty_chars_2, num_chars):
            string = string[:i] + str(random.randint(0,1)) + string[i+1:]
        # Add a 'convolve' function where it saves the index of all 'replace_chars' and like spreads out around from them
        return string

    def update_brain():
        # Add some validation here
        # thoughts_text = list(write_entry.get("1.0", tk.END).strip().split()) + ['']
        # x = len(thoughts_text)
        # if x > random.randint(30, 50):
        #     result = askyesno(title='Stop', message='Are you sure you want to stop?')
            
        # pick a random word
        # words = [f" {random.choice(thoughts_text)} " for _ in range(int(x/10)+1)]
        # new_text = generate_neuron_grid(18, 8, x, words)
        new_text = replace_random_chars()
        bottom_left_label.delete(1.0, tk.END)  # Clear the existing text
        bottom_left_label.insert(tk.END, new_text)
        update_rate = 500 # int(700*(2.7 ** (-x/10))+500)
        root.after(update_rate, update_brain)  # Schedule the next update

    def update_brain_2():
        new_text = replace_random_chars_2()
        ascii_brainGPT.delete(1.0, tk.END)  # Clear the existing text
        ascii_brainGPT.insert(tk.END, new_text)
        root.after(500, update_brain_2)  # Schedule the next update

    def update_text_display():
        # Get the text from the Text widget
        text = write_entry.get("1.0", tk.END).strip()
        # Clear the Text widget
        write_entry.delete("1.0", tk.END)

        filename=get_filename()
        # Write the text to the file
        if text:
            with open(filename, "a") as file:
                print(f'Just added {text} to {filename}')
                file.write(text + '\n')
                just_saved_text()

        # Update the reader but also the brain string 
        with open(filename, "r") as file:
            lines = file.readlines()
            last_5_lines = lines[-8:]
            
            last_lines_text.config(state=tk.NORMAL)
            last_lines_text.delete(1.0, tk.END)  # Clear the existing text
            last_lines_text.insert(tk.END, "...\n" + "".join(last_5_lines))
            
            word_count = 0 
            words = list()
            for line in lines:
                sentence = line.split() + ['']
                words.append(random.choice(sentence))
                word_count += len(sentence)

            text_3.config(text = f"Words written today: {word_count}")
            brain.update_brain_string(words)
        last_lines_text.config(state=tk.DISABLED)

    def not_saved_text(event):
        saved_text.config(text='Not Saved', foreground='red')

    def just_saved_text(): 
        saved_text.config(text='    Saved', foreground='green')

    # Create a style
    style = ttk.Style()

    # Configure the theme with style
    style.theme_use('clam')

    # Create the main window
    root = tk.Tk()
    root.title("My Notebook")
    root.geometry('1000x400')
    # Disable window resizing
    root.resizable(False, False)
    width_of_text = 80

    # +==================================================================+
    # Write

    # Create the permanent left section
    left_frame = ttk.Frame(root, width=200)
    left_frame.pack(side='left', fill=tk.Y, padx=(10, 0), pady=14)  # Fill vertically

    text_1 = tk.Label(left_frame, text='Your Notebook', width=40, font='Menlo 11 bold', anchor='w')
    text_1.pack(side='top')

    text_2 = tk.Label(left_frame, text=f'Date: {date.today().strftime("%d/%m/%Y")}', width=40, font='Menlo 11', anchor='w')
    text_2.pack(side='top')

    text_3 = tk.Label(left_frame, text = 'Words written today:', width=40, font='Menlo 11', anchor='w')
    text_3.pack(side='top')

    text_4 = tk.Label(left_frame, text=f'This is your brain, be kind to it', width=40, font='Menlo 11', anchor='w')
    text_4.pack(side='top')

    bottom_left_label = tk.Text(left_frame, wrap=tk.WORD, width=146, height=72, font=('Menlo', 3))
    bottom_left_label.pack(side=tk.BOTTOM)

    # bottom_left_label.insert(tk.END, 'Here')

    # Create the notebook (tabs)
    notebook = ttk.Notebook(root, height=400)
    notebook.pack(side='left', fill=tk.X, expand=True)

    # Create frames for each tab
    write_frame = ttk.Frame(notebook)
    read_frame = ttk.Frame(notebook)
    erp_frame = ttk.Frame(notebook)
    mindfulness_frame = ttk.Frame(notebook)
    talk_frame = ttk.Frame(notebook)
    settings_frame = ttk.Frame(notebook)

    # Add frames to notebook (tabs)
    notebook.add(write_frame,       text='     Write     ')
    notebook.add(read_frame,        text='     Read      ')
    notebook.add(erp_frame,         text='     ERP      ')
    notebook.add(mindfulness_frame, text='  Mindfulness  ')
    notebook.add(talk_frame,        text='     Talk      ')
    notebook.add(settings_frame,    text='   Settings   ')

    # 'Write' tab divided into two sections
    top_section = ttk.Frame(write_frame)
    top_section.pack(pady=(25,0))

    middle_section = ttk.Frame(write_frame)
    middle_section.pack()

    bottom_section = ttk.Frame(write_frame)
    bottom_section.pack()

    # Widgets for top section
    last_lines_label = ttk.Label(top_section, text='Last 5 lines of current note:', font='Menlo 12', width=71)
    last_lines_label.pack(side='left')

    saved_text = ttk.Label(top_section, text='Not saved', font='Menlo 12', foreground='red')
    saved_text.pack(side='left')

    last_lines_text = tk.Text(middle_section, wrap=tk.WORD, width=width_of_text, height=10, font=('Courier', 12))
    last_lines_text.pack() # Change line thickness


    # Middle Section
    # Replace Entry with Text widget to allow multiline input
    write_entry_label = ttk.Label(middle_section, text='Enter thoughts:', font='Menlo 12', width=79, anchor='w')
    write_entry_label.pack()
    write_entry = tk.Text(middle_section, height=6, width=width_of_text, font=("Courier", 12))
    write_entry.pack()
    write_entry.bind('<Key>', not_saved_text)

    # Create button
    button1 = tk.Button(
        bottom_section,
        text="Enter",
        command=update_text_display,
        activebackground="blue",  # Set background color when button is clicked
        activeforeground="white",  # Set foreground (text) color when button is clicked
        relief=tk.RAISED,  # Add a raised border
        bd=1,  # Set the border width
        font=("Menlo", 12),  # Set the font style
    )
    button1.pack(side="right", padx=(0, 27))

    #update_text_display()

    # +==================================================================+
    # Read
    # Function to handle double-click event on listbox items
    def open_file(event):
        # Get the selected file from the listbox
        selected_file = listbox.get(listbox.curselection())

        # Clear the text widget
        text_widget.delete("1.0", tk.END)

        # Open and read the contents of the selected file
        with open(selected_file, "r") as file:
            contents = file.read()

            # Insert the contents into the text widget
            text_widget.insert(tk.END, contents)

    # Create a label for the title
    title_label = ttk.Label(read_frame, text='Browse Your Thoughts:', style='TLabel')
    title_label.grid(row=0, column=0, columnspan=2, pady=5)

    # Create a listbox to display the filenames
    listbox = tk.Listbox(read_frame, width=20, height=10)
    listbox.grid(row=1, column=0, padx=5, pady=10, sticky='ns')

    # Populate the listbox with the filenames of .txt files starting with "thoughts"
    file_list = [file for file in os.listdir() if file.startswith("thoughts_2") and file.endswith(".txt")]
    for fname in file_list:
        listbox.insert(tk.END, fname)

    # Create a scrollable text widget to display the contents of the selected file
    text_widget = scrolledtext.ScrolledText(read_frame, wrap=tk.WORD, width=47, height=10, font=('Courier', 10))
    text_widget.grid(row=1, column=1, padx=5, pady=10, sticky='nsew')

    # Bind the double-click event to the listbox
    listbox.bind("<Double-Button-1>", open_file)

    # +==================================================================+
    # ERP
    erp_main = ttk.Frame(erp_frame)
    erp_main.pack(fill='x', expand=True)

    erp_entry = ttk.Label(erp_main, text='Enter thoughts:', style='TLabel')
    erp_entry.pack()
    erp_entry = tk.Text(erp_main, height=7, width=50, font=("Courier", 12))
    erp_entry.pack()


    # +==================================================================+
    # Mindfulness

    # This is XYX ai generated name (wait no need for a new avatar, just another brain ASCII, make it clear that you're loading it up)
    # They are a projection of your thoughts, an entity - a neural network trained soley on what you have written
    # And nothing else. a neural network of your memories 
    # Talk to your brain
    # These thoughts are yours... no matter what. Surely ChatGPT talks to your thoughts and Dall-E And
    # REPLACE THE BLACK PARTS OF BRAIN WITH RANDOM 1'S AND 0'S
    # THINK OF USING THE LARGE LANGUAGE MODEL THING. Know ur shit
    # Load the decoding information

    # This queue will hold the generated thoughts.
    generated_thoughts = queue.Queue()
    model = get_model()

    # This function will run in a separate thread, generating thoughts.
    def generate_thoughts(model):
        while True:
            if generated_thoughts.qsize() < 100:
                print('size:', generated_thoughts.qsize())
                print('Generating more thoughts...')
                thoughts = generate_gpt(model)
                for thought in thoughts:
                    generated_thoughts.put(thought)
            time.sleep(1)  # sleep to prevent CPU overuse

    # Start the thought generation thread.
    threading.Thread(target=generate_thoughts, args=(model,), daemon=True).start()

    def print_gpt_string():
        if not generated_thoughts.empty():
            thought = generated_thoughts.get()
            mind_terminal_text.insert(tk.END, itos[thought])
        root.after(1000, print_gpt_string)  # schedule the function to be called again in 1 second



    # Use itos[token] to convert on letter-wise basis 
    # Call print ever 0.5 seconds, call generate when the length gets below a certain point nise. 
    # Now just randomise the seed every time + 
    # Make the brain show one's and 0's
    # money trees , 478


    mindfulness_topFrame = ttk.Frame(mindfulness_frame)
    mindfulness_topFrame.pack(side='top')
    mindfulness_topBottom = ttk.Frame(mindfulness_frame)
    mindfulness_topBottom.pack(side='top')


    ascii_brainGPT = tk.Text(mindfulness_topFrame, height=64, width=162, font=("Menlo", 2))
    ascii_brainGPT.pack(side='top', pady=(15, 0))
    ascii_brainGPT.insert(tk.END, brain_string2)

    mindfulness_title = tk.Label(mindfulness_topFrame, width=25, text=' This is Synap', font='Menlo 11 bold', anchor='w')
    mindfulness_title.pack(side='top')
    mindfulness_subtitle = tk.Label(mindfulness_topFrame, width=25, text='He is a neural network of your memories', font='Menlo 11', anchor='w')
    mindfulness_subtitle.pack(side='top')

    mind_terminal_text = tk.Text(mindfulness_topFrame, height=15, width=70, font=("Menlo", 10))
    mind_terminal_text.pack(side='top', padx=0, pady=(10, 0))
    mind_terminal_text.config(state=tk.NORMAL)

    # Add a start/pause function
    print_gpt_string() 
    update_brain_2()

    # +==================================================================+
    # Speak to someone 
    transcript = list()

    def update_therapist():
        mood = random.choice([
            therapist_doubtful,
            therapist_humour,
            therapist_interested,
            therapist_passionate,
            therapist_shocked
        ])
        ascii_therapist.delete("1.0", tk.END)
        ascii_therapist.config(state=tk.NORMAL)
        ascii_therapist.insert(tk.END, mood)
        ascii_therapist.config(state=tk.DISABLED)

    def init_therapist(event):
        input_text.config(state=tk.NORMAL)
        input_text.delete("1.0", tk.END) # Clear the input box
        # Get a random memory 
        memory = "This dinner is so nice, get to code, iMpossible. Thank You. So Much to tell her. Too good to be true, maybe."
        transcript.append(f"Therapist: Hello. Let's take a look at some of your recent memories. You wrote '{memory}'\n")
        transcript.append(f"Therapist: ") 
        terminal_text.config(state=tk.NORMAL)
        terminal_text.insert(tk.END, f"Therapist: Let's take a look at some of your recent memories. You wrote '{memory}'\n")
        terminal_text.config(state=tk.DISABLED)
        root.update()

        response = therapist_conversation(transcript)
        transcript[-1] = transcript[-1] + response
        terminal_text.config(state=tk.NORMAL)
        terminal_text.insert(tk.END, f"\nTherapist: {response}\n")
        terminal_text.config(state=tk.DISABLED)
        root.update()

    def handle_input(event): 
        # Get the input from the input_text widget
        input = input_text.get("1.0", tk.END).strip()
        input_text.delete("1.0", tk.END)
        terminal_text.config(state=tk.NORMAL)
        terminal_text.insert(tk.END, f"\nPatient: {input}\n")
        terminal_text.config(state=tk.DISABLED)

        # Flash the enter_box background to green
        enter_box.config(bg='green')
        enter_box.after(100, lambda: enter_box.config(bg='systemTextBackgroundColor'))

        # Add to transcript
        transcript.append(f"Patient: {input}")
        transcript.append(f"Therapist: ")
        root.update()
        update_therapist()

        response = therapist_conversation(transcript)
        transcript[-1] = transcript[-1] + response
        terminal_text.config(state=tk.NORMAL)
        terminal_text.insert(tk.END, f"\nTherapist: {response}\n")
        terminal_text.config(state=tk.DISABLED)
        root.update()

    therapy_title = tk.Label(talk_frame, text=' This is Kiara', font='Menlo 11 bold', anchor='w')
    therapy_title.pack(side='top', pady=(30, 0), padx=30, fill='x')
    therapy_subtitle = tk.Label(talk_frame, text=' She is a specialist therapist in memory hoarding', font='Menlo 11', anchor='w')
    therapy_subtitle.pack(side='top', fill='x', padx=30)

    therapy_topFrame = ttk.Frame(talk_frame)
    therapy_topFrame.pack(side='top')
    therapy_topBottom = ttk.Frame(talk_frame)
    therapy_topBottom.pack(side='top')

    terminal_text = tk.Text(therapy_topFrame, height=15, width=70, font=("Menlo", 10))
    terminal_text.pack(side='left', padx=0, pady=0)
    terminal_text.config(state=tk.DISABLED)
    ascii_therapist = tk.Text(therapy_topFrame, height=83, width=140, font=("Menlo", 2))
    ascii_therapist.pack(side='left', fill='x', expand=True)
    update_therapist()

    # Input box
    enter_box = tk.Text(therapy_topBottom, height=1, width=3)
    enter_box.insert(tk.END, ">>>")
    enter_box.pack(side='left')
    enter_box.config(state=tk.DISABLED)

    input_text = tk.Text(therapy_topBottom, height=1, width=90, font=("Menlo", 10)) #highlightthickness
    input_text.insert(tk.END, "[Click here to begin]")
    input_text.config(state=tk.DISABLED)
    input_text.pack(side='left')

    ### ^^^^ 
    
    # init_therapist(None)
    input_text.bind('<Return>', handle_input)

    # ADD WRAP IT UP BUTTON 
    # Add error management 
    # you can intersect and add therapy lines "Let's now delete some random lines together. (delete), (next)"
    # And then a character delete ascii animation
    # Add sleeping animation till you wake her up
    # Speak colloquially yet professionally, and with a few typos for realism. Save transcript. Get to 
    # temeprature, settings, https://holypython.com/python-api-tutorial/learn-openai-official-chatgpt-api-comprehensive-developer-tutorial/
    # error handling. 
    # Discipline. the aim is to interrogate what they said 
    # The box cure method
    # Prompt: Go through line by line. Try to understand WHY you wrote that down. - FR. Interrogate each line. 






    # +==================================================================+
    # Settings 

    def train_gpt():
        # Function to handle the 'train GPT model' button press
        print("Training GPT model...")

    def save_settings():
        # Function to handle the 'Save Settings' button press
        user_settings = {
            'user_name': user_name_entry.get(),
            'password': password_entry.get(),
            'api_key': api_key_entry.get()
        }
        with open('user_settings.json', 'w') as file:
            json.dump(user_settings, file)
        print("Settings saved.")
    # Train mode
    # GPT-API key
    # Name

    # Create the settings frame
    settings_frame = ttk.Frame(settings_frame, padding=20)
    settings_frame.pack()

    # Create the user name entry
    settings_title = tk.Label(settings_frame, text='Settings\n', width=24, font='Helvetica 10 bold')
    settings_title.grid(row=0, columnspan=2)

    user_name_label = ttk.Label(settings_frame, text='First Name:')
    user_name_label.grid(row=1, column=0, sticky=tk.W)

    user_name_entry = ttk.Entry(settings_frame)
    user_name_entry.grid(row=1, column=1, sticky=tk.W)

    # Create the password entry
    password_label = ttk.Label(settings_frame, text='Password:')
    password_label.grid(row=2, column=0, sticky=tk.W)

    password_entry = ttk.Entry(settings_frame, show='*')
    password_entry.grid(row=2, column=1, sticky=tk.W)

    # Create the API key entry
    api_key_label = ttk.Label(settings_frame, text='API Key:')
    api_key_label.grid(row=3, column=0, sticky=tk.W)

    api_key_entry = ttk.Entry(settings_frame)
    api_key_entry.grid(row=3, column=1, sticky=tk.W)

    # Load the API key from the user_settings.json file if it exists
    try:
        with open('user_settings.json', 'r') as file:
            user_settings = json.load(file)
            api_key_entry.insert(0, user_settings.get('api_key', ''))
    except FileNotFoundError:
        pass

    # Create the 'Save Settings' button
    save_button = ttk.Button(settings_frame, text='Save Settings', command=save_settings)
    save_button.grid(row=4, columnspan=2, pady=10)

    separator = ttk.Label(settings_frame, text='_________________________')
    separator.grid(row=5, columnspan=2)
    # Create the 'Train GPT Model' button
    train_button = ttk.Button(settings_frame, text='Train GPT Model', command=train_gpt)
    train_button.grid(row=6, columnspan=3, pady=10)

    update_brain()

    # Start the main loop
    root.mainloop()


if __name__ == "__main__":
    main()
